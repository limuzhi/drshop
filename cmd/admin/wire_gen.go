// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package admin

import (
	"drpshop/internal/apps/admin"
	"drpshop/internal/apps/admin/service"
	"drpshop/internal/conf"
	"drpshop/internal/server"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go.opentelemetry.io/otel/sdk/trace"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, registry *conf.Registry, confData *conf.Data,
	logger log.Logger, tp *trace.TracerProvider) (*kratos.App, func(), error) {
	httpMiddleware, err := server.NewHttpMiddleware(confData, logger, tp)
	if err != nil {
		return nil, func() {}, err
	}

	httpServer := server.NewHTTPServer(confServer, httpMiddleware)

	//grpcServer := server.NewGRPCServer(confServer, middleware)
	adminService, cleanup, err := service.NewAdminService(confData, registry, logger, tp, httpMiddleware)
	if err != nil {
		return nil, nil, err
	}
	adminApp := admin.NewAdminApp(httpServer, nil, adminService)
	kratosApp := newApp(logger, adminApp)

	return kratosApp, func() {
		cleanup()
	}, nil
}
