// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package sys

import (
	"drpshop/internal/apps/sys"
	"drpshop/internal/apps/sys/service"
	"drpshop/internal/conf"
	"drpshop/internal/server"

	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go.opentelemetry.io/otel/sdk/trace"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, registry *conf.Registry, confData *conf.Data, u *conf.UserConfig,
	logger log.Logger, tp *trace.TracerProvider) (*kratos.App, func(), error) {
	middleware, err := server.NewGrpcMiddleware(confData, logger,tp)
	if err != nil {
		return nil,nil, err
	}

	grpcServer := server.NewGRPCServer(confServer, middleware)
	sysService, cleanup, err := service.NewSysService(confData, u, logger)
	if err != nil {
		return nil, nil, err
	}
	sysApp := sys.NewSysApp(nil, grpcServer,middleware, sysService)
	registrar := server.NewRegistrar(registry)
	app := newApp(logger, sysApp, registrar)
	return app, func() {
		cleanup()
	}, nil
}
