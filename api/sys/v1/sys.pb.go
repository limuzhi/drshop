// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/sys/v1/sys.proto

package v1

import (
	common "drpshop/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 图片验证码
type CaptchaImgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint32 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width  uint32 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Length uint32 `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *CaptchaImgReq) Reset() {
	*x = CaptchaImgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaImgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaImgReq) ProtoMessage() {}

func (x *CaptchaImgReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaImgReq.ProtoReflect.Descriptor instead.
func (*CaptchaImgReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{0}
}

func (x *CaptchaImgReq) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CaptchaImgReq) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CaptchaImgReq) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type CaptchaImgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaId string `protobuf:"bytes,1,opt,name=captcha_id,json=captchaId,proto3" json:"captcha_id,omitempty"`
	B64S      string `protobuf:"bytes,2,opt,name=b64s,proto3" json:"b64s,omitempty"`
}

func (x *CaptchaImgRes) Reset() {
	*x = CaptchaImgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaImgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaImgRes) ProtoMessage() {}

func (x *CaptchaImgRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaImgRes.ProtoReflect.Descriptor instead.
func (*CaptchaImgRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{1}
}

func (x *CaptchaImgRes) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *CaptchaImgRes) GetB64S() string {
	if x != nil {
		return x.B64S
	}
	return ""
}

//短信验证码
type CaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//接收对象 email
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	//本地验证码
	Captcha string `protobuf:"bytes,2,opt,name=captcha,proto3" json:"captcha,omitempty"`
	//本地验证码
	CaptchaId string `protobuf:"bytes,3,opt,name=captcha_id,json=captchaId,proto3" json:"captcha_id,omitempty"`
}

func (x *CaptchaReq) Reset() {
	*x = CaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptchaReq) ProtoMessage() {}

func (x *CaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptchaReq.ProtoReflect.Descriptor instead.
func (*CaptchaReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{2}
}

func (x *CaptchaReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CaptchaReq) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

func (x *CaptchaReq) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

type CommonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *CommonRes) Reset() {
	*x = CommonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRes) ProtoMessage() {}

func (x *CommonRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRes.ProtoReflect.Descriptor instead.
func (*CommonRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{3}
}

func (x *CommonRes) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type CommonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonReq) Reset() {
	*x = CommonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReq) ProtoMessage() {}

func (x *CommonReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReq.ProtoReflect.Descriptor instead.
func (*CommonReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{4}
}

type CheckCasbinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// 获得请求路径URL
	Obj string `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	// Method请求方式
	Act string `protobuf:"bytes,3,opt,name=act,proto3" json:"act,omitempty"`
}

func (x *CheckCasbinReq) Reset() {
	*x = CheckCasbinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckCasbinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckCasbinReq) ProtoMessage() {}

func (x *CheckCasbinReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckCasbinReq.ProtoReflect.Descriptor instead.
func (*CheckCasbinReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{5}
}

func (x *CheckCasbinReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckCasbinReq) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *CheckCasbinReq) GetAct() string {
	if x != nil {
		return x.Act
	}
	return ""
}

//user start---------------------
//用户登录
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 账户
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// 密码
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// 验证码
	Captcha string `protobuf:"bytes,3,opt,name=captcha,proto3" json:"captcha,omitempty"`
	// 验证码id
	CaptchaId string `protobuf:"bytes,4,opt,name=captcha_id,json=captchaId,proto3" json:"captcha_id,omitempty"`
	// 短信、邮箱 验证码
	Code string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{6}
}

func (x *LoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetCaptcha() string {
	if x != nil {
		return x.Captcha
	}
	return ""
}

func (x *LoginReq) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *LoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Expire       int64  `protobuf:"varint,2,opt,name=expire,proto3" json:"expire,omitempty"`
	RefreshAfter int64  `protobuf:"varint,3,opt,name=refreshAfter,proto3" json:"refreshAfter,omitempty"`
}

func (x *LoginRes) Reset() {
	*x = LoginRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRes) ProtoMessage() {}

func (x *LoginRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRes.ProtoReflect.Descriptor instead.
func (*LoginRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{7}
}

func (x *LoginRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginRes) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *LoginRes) GetRefreshAfter() int64 {
	if x != nil {
		return x.RefreshAfter
	}
	return 0
}

type UserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *UserInfoReq) Reset() {
	*x = UserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReq) ProtoMessage() {}

func (x *UserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReq.ProtoReflect.Descriptor instead.
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{8}
}

func (x *UserInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserProfileSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Mobile   string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email    string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Sex      int64  `protobuf:"varint,7,opt,name=sex,proto3" json:"sex,omitempty"`
	Avatar   string `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UpdateBy int64  `protobuf:"varint,14,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *UserProfileSetReq) Reset() {
	*x = UserProfileSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileSetReq) ProtoMessage() {}

func (x *UserProfileSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileSetReq.ProtoReflect.Descriptor instead.
func (*UserProfileSetReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{9}
}

func (x *UserProfileSetReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserProfileSetReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserProfileSetReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserProfileSetReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserProfileSetReq) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserProfileSetReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserProfileSetReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type UserInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar       string   `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	UserName     string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Introduction string   `protobuf:"bytes,3,opt,name=introduction,proto3" json:"introduction,omitempty"`
	RoleIds      []int64  `protobuf:"varint,4,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
	RoleKeys     []string `protobuf:"bytes,5,rep,name=roleKeys,proto3" json:"roleKeys,omitempty"`
	Permissions  []string `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *UserInfoRes) Reset() {
	*x = UserInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRes) ProtoMessage() {}

func (x *UserInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRes.ProtoReflect.Descriptor instead.
func (*UserInfoRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{10}
}

func (x *UserInfoRes) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfoRes) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfoRes) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *UserInfoRes) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UserInfoRes) GetRoleKeys() []string {
	if x != nil {
		return x.RoleKeys
	}
	return nil
}

func (x *UserInfoRes) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UserAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Nickname string  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Mobile   string  `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email    string  `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	DeptId   int64   `protobuf:"varint,5,opt,name=deptId,proto3" json:"deptId,omitempty"`
	Sex      int64   `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	Avatar   string  `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Password string  `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Address  string  `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Remark   string  `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	IsAdmin  int64   `protobuf:"varint,11,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	Status   string  `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy int64   `protobuf:"varint,13,opt,name=createBy,proto3" json:"createBy,omitempty"`
	RoleIds  []int64 `protobuf:"varint,14,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
	PostIds  []int64 `protobuf:"varint,15,rep,packed,name=postIds,proto3" json:"postIds,omitempty"`
}

func (x *UserAddReq) Reset() {
	*x = UserAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddReq) ProtoMessage() {}

func (x *UserAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddReq.ProtoReflect.Descriptor instead.
func (*UserAddReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{11}
}

func (x *UserAddReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserAddReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserAddReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserAddReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserAddReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserAddReq) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserAddReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserAddReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserAddReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserAddReq) GetIsAdmin() int64 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *UserAddReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserAddReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *UserAddReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UserAddReq) GetPostIds() []int64 {
	if x != nil {
		return x.PostIds
	}
	return nil
}

type UserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum   int64  `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Mobile    string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email     string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Status    string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	DeptId    int64  `protobuf:"varint,8,opt,name=deptId,proto3" json:"deptId,omitempty"`
	StartTime int64  `protobuf:"varint,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,10,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *UserListReq) Reset() {
	*x = UserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListReq) ProtoMessage() {}

func (x *UserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListReq.ProtoReflect.Descriptor instead.
func (*UserListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{12}
}

func (x *UserListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *UserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserListReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserListReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserListReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserListReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UserListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type UserListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户ID
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	//中国手机不带国家代码，国际手机号格式为：国家代码-手机号
	Mobile string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	//用户昵称
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	//加密盐
	Salt string `protobuf:"bytes,5,opt,name=salt,proto3" json:"salt,omitempty"`
	//用户状态;1:禁用,2:正常,3:未验证
	Status int64 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	//用户登录邮箱
	Email string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	//联系地址
	Address string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	//性别;0:保密,1:男,2:女
	Sex int32 `protobuf:"varint,9,opt,name=sex,proto3" json:"sex,omitempty"`
	//用户头像
	Avatar string `protobuf:"bytes,10,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//备注
	Remark string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	//部门id
	DeptId  int64 `protobuf:"varint,12,opt,name=deptId,proto3" json:"deptId,omitempty"`
	IsAdmin int32 `protobuf:"varint,13,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	//生日
	Birthday string `protobuf:"bytes,14,opt,name=birthday,proto3" json:"birthday,omitempty"`
	//最后登录ip
	LastLoginIp string `protobuf:"bytes,15,opt,name=lastLoginIp,proto3" json:"lastLoginIp,omitempty"`
	//最后登录时间
	LastLoginTime string `protobuf:"bytes,16,opt,name=lastLoginTime,proto3" json:"lastLoginTime,omitempty"`
	//创建时间
	CreatedAt string `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt string                   `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeptInfo  *UserListDataUserDept    `protobuf:"bytes,19,opt,name=deptInfo,proto3" json:"deptInfo,omitempty"`
	Roles     []*UserListDataUserRoles `protobuf:"bytes,20,rep,name=roles,proto3" json:"roles,omitempty"`
	Posts     []*UserListDataUserPosts `protobuf:"bytes,21,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (x *UserListData) Reset() {
	*x = UserListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListData) ProtoMessage() {}

func (x *UserListData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListData.ProtoReflect.Descriptor instead.
func (*UserListData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{13}
}

func (x *UserListData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserListData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserListData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserListData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserListData) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *UserListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserListData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserListData) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserListData) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserListData) GetIsAdmin() int32 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *UserListData) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserListData) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *UserListData) GetLastLoginTime() string {
	if x != nil {
		return x.LastLoginTime
	}
	return ""
}

func (x *UserListData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserListData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UserListData) GetDeptInfo() *UserListDataUserDept {
	if x != nil {
		return x.DeptInfo
	}
	return nil
}

func (x *UserListData) GetRoles() []*UserListDataUserRoles {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserListData) GetPosts() []*UserListDataUserPosts {
	if x != nil {
		return x.Posts
	}
	return nil
}

type UserListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UserListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserListRes) Reset() {
	*x = UserListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListRes) ProtoMessage() {}

func (x *UserListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListRes.ProtoReflect.Descriptor instead.
func (*UserListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{14}
}

func (x *UserListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserListRes) GetList() []*UserListData {
	if x != nil {
		return x.List
	}
	return nil
}

type UserUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Nickname string  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Mobile   string  `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Salt     string  `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"`
	Email    string  `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	DeptId   int64   `protobuf:"varint,6,opt,name=deptId,proto3" json:"deptId,omitempty"`
	Sex      int64   `protobuf:"varint,7,opt,name=sex,proto3" json:"sex,omitempty"`
	Avatar   string  `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Password string  `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	Address  string  `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	Remark   string  `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	IsAdmin  int64   `protobuf:"varint,12,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`
	Status   string  `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy int64   `protobuf:"varint,14,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	RoleIds  []int64 `protobuf:"varint,15,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
	PostIds  []int64 `protobuf:"varint,16,rep,packed,name=postIds,proto3" json:"postIds,omitempty"`
	UserId   int64   `protobuf:"varint,17,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserUpdateReq) Reset() {
	*x = UserUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateReq) ProtoMessage() {}

func (x *UserUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateReq.ProtoReflect.Descriptor instead.
func (*UserUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{15}
}

func (x *UserUpdateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserUpdateReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserUpdateReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UserUpdateReq) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *UserUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserUpdateReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserUpdateReq) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserUpdateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserUpdateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserUpdateReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserUpdateReq) GetIsAdmin() int64 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *UserUpdateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *UserUpdateReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UserUpdateReq) GetPostIds() []int64 {
	if x != nil {
		return x.PostIds
	}
	return nil
}

func (x *UserUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *UserDeleteReq) Reset() {
	*x = UserDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleteReq) ProtoMessage() {}

func (x *UserDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleteReq.ProtoReflect.Descriptor instead.
func (*UserDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{16}
}

func (x *UserDeleteReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type ReSetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UpdateBy int64 `protobuf:"varint,2,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *ReSetPasswordReq) Reset() {
	*x = ReSetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReSetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReSetPasswordReq) ProtoMessage() {}

func (x *ReSetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReSetPasswordReq.ProtoReflect.Descriptor instead.
func (*ReSetPasswordReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{17}
}

func (x *ReSetPasswordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReSetPasswordReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type ChangePwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *ChangePwdReq) Reset() {
	*x = ChangePwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePwdReq) ProtoMessage() {}

func (x *ChangePwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePwdReq.ProtoReflect.Descriptor instead.
func (*ChangePwdReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{18}
}

func (x *ChangePwdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChangePwdReq) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ChangePwdReq) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type UserStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserStatusReq) Reset() {
	*x = UserStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusReq) ProtoMessage() {}

func (x *UserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusReq.ProtoReflect.Descriptor instead.
func (*UserStatusReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{19}
}

func (x *UserStatusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type LoginUserUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastLoginIp   string `protobuf:"bytes,1,opt,name=LastLoginIp,proto3" json:"LastLoginIp,omitempty"`
	LastLoginTime int64  `protobuf:"varint,2,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"`
	UserId        int64  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LoginUserUpdateReq) Reset() {
	*x = LoginUserUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserUpdateReq) ProtoMessage() {}

func (x *LoginUserUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserUpdateReq.ProtoReflect.Descriptor instead.
func (*LoginUserUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{20}
}

func (x *LoginUserUpdateReq) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *LoginUserUpdateReq) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *LoginUserUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserPostRoleListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostList []*UserPostRoleListResPostInfo `protobuf:"bytes,1,rep,name=postList,proto3" json:"postList,omitempty"`
	RoleList []*UserPostRoleListResRoleInfo `protobuf:"bytes,2,rep,name=roleList,proto3" json:"roleList,omitempty"`
	DeptList []*UserPostRoleListResDeptInfo `protobuf:"bytes,3,rep,name=deptList,proto3" json:"deptList,omitempty"`
}

func (x *UserPostRoleListRes) Reset() {
	*x = UserPostRoleListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostRoleListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostRoleListRes) ProtoMessage() {}

func (x *UserPostRoleListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostRoleListRes.ProtoReflect.Descriptor instead.
func (*UserPostRoleListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{21}
}

func (x *UserPostRoleListRes) GetPostList() []*UserPostRoleListResPostInfo {
	if x != nil {
		return x.PostList
	}
	return nil
}

func (x *UserPostRoleListRes) GetRoleList() []*UserPostRoleListResRoleInfo {
	if x != nil {
		return x.RoleList
	}
	return nil
}

func (x *UserPostRoleListRes) GetDeptList() []*UserPostRoleListResDeptInfo {
	if x != nil {
		return x.DeptList
	}
	return nil
}

//role start---------------------
type RoleAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//排序
	Sort int64 `protobuf:"varint,1,opt,name=sort,proto3" json:"sort,omitempty"`
	//父角色ID
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//角色名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	//权限字符
	RoleKey string `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	//数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	DataScope int64 `protobuf:"varint,7,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
}

func (x *RoleAddReq) Reset() {
	*x = RoleAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAddReq) ProtoMessage() {}

func (x *RoleAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAddReq.ProtoReflect.Descriptor instead.
func (*RoleAddReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{22}
}

func (x *RoleAddReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *RoleAddReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RoleAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleAddReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *RoleAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleAddReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoleAddReq) GetDataScope() int64 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

type RoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	//角色名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	//权限字符
	RoleKey string `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleListReq) Reset() {
	*x = RoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListReq) ProtoMessage() {}

func (x *RoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListReq.ProtoReflect.Descriptor instead.
func (*RoleListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{23}
}

func (x *RoleListReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *RoleListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoleListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleListReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *RoleListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	//角色名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//父角色ID
	Pid int64 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	//权限字符
	RoleKey string `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	//排序
	Sort int64 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	//数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	DataScope int64 `protobuf:"varint,7,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleListData) Reset() {
	*x = RoleListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListData) ProtoMessage() {}

func (x *RoleListData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListData.ProtoReflect.Descriptor instead.
func (*RoleListData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{24}
}

func (x *RoleListData) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleListData) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RoleListData) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *RoleListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleListData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *RoleListData) GetDataScope() int64 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *RoleListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RoleListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RoleListRes) Reset() {
	*x = RoleListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListRes) ProtoMessage() {}

func (x *RoleListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListRes.ProtoReflect.Descriptor instead.
func (*RoleListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{25}
}

func (x *RoleListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleListRes) GetList() []*RoleListData {
	if x != nil {
		return x.List
	}
	return nil
}

type RoleUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	//角色名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//父角色ID
	Pid int64 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	//权限字符
	RoleKey string `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	//排序
	Sort int64 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	//数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	DataScope int64 `protobuf:"varint,7,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleUpdateReq) Reset() {
	*x = RoleUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdateReq) ProtoMessage() {}

func (x *RoleUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{26}
}

func (x *RoleUpdateReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleUpdateReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RoleUpdateReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *RoleUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleUpdateReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *RoleUpdateReq) GetDataScope() int64 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *RoleUpdateReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type RoleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIds []int64 `protobuf:"varint,1,rep,packed,name=roleIds,proto3" json:"roleIds,omitempty"`
}

func (x *RoleDeleteReq) Reset() {
	*x = RoleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleteReq) ProtoMessage() {}

func (x *RoleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleteReq.ProtoReflect.Descriptor instead.
func (*RoleDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{27}
}

func (x *RoleDeleteReq) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type UpdateRoleStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateRoleStatusReq) Reset() {
	*x = UpdateRoleStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStatusReq) ProtoMessage() {}

func (x *UpdateRoleStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleStatusReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateRoleStatusReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleStatusReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type QueryMenuByRoleIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *QueryMenuByRoleIdReq) Reset() {
	*x = QueryMenuByRoleIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuByRoleIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuByRoleIdReq) ProtoMessage() {}

func (x *QueryMenuByRoleIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuByRoleIdReq.ProtoReflect.Descriptor instead.
func (*QueryMenuByRoleIdReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{29}
}

func (x *QueryMenuByRoleIdReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type QueryMenuByRoleIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MenuListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryMenuByRoleIdRes) Reset() {
	*x = QueryMenuByRoleIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuByRoleIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuByRoleIdRes) ProtoMessage() {}

func (x *QueryMenuByRoleIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuByRoleIdRes.ProtoReflect.Descriptor instead.
func (*QueryMenuByRoleIdRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{30}
}

func (x *QueryMenuByRoleIdRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryMenuByRoleIdRes) GetList() []*MenuListData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateMenuRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	UserId  int64   `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	MenuIds []int64 `protobuf:"varint,3,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *UpdateMenuRoleReq) Reset() {
	*x = UpdateMenuRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuRoleReq) ProtoMessage() {}

func (x *UpdateMenuRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuRoleReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateMenuRoleReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateMenuRoleReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateMenuRoleReq) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type QueryApisByRoleIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *QueryApisByRoleIdReq) Reset() {
	*x = QueryApisByRoleIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryApisByRoleIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryApisByRoleIdReq) ProtoMessage() {}

func (x *QueryApisByRoleIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryApisByRoleIdReq.ProtoReflect.Descriptor instead.
func (*QueryApisByRoleIdReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{32}
}

func (x *QueryApisByRoleIdReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type QueryApisByRoleIdData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId    int64  `protobuf:"varint,1,opt,name=apiId,proto3" json:"apiId,omitempty"`
	Handle   string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Path     string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Method   string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
	Category string `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	//创建日期
	CreatedAt string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//修改日期
	UpdatedAt string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreateBy  int64  `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy  int64  `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *QueryApisByRoleIdData) Reset() {
	*x = QueryApisByRoleIdData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryApisByRoleIdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryApisByRoleIdData) ProtoMessage() {}

func (x *QueryApisByRoleIdData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryApisByRoleIdData.ProtoReflect.Descriptor instead.
func (*QueryApisByRoleIdData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{33}
}

func (x *QueryApisByRoleIdData) GetApiId() int64 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *QueryApisByRoleIdData) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *QueryApisByRoleIdData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QueryApisByRoleIdData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *QueryApisByRoleIdData) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *QueryApisByRoleIdData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *QueryApisByRoleIdData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *QueryApisByRoleIdData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *QueryApisByRoleIdData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QueryApisByRoleIdData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type QueryApisByRoleIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*QueryApisByRoleIdData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *QueryApisByRoleIdRes) Reset() {
	*x = QueryApisByRoleIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryApisByRoleIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryApisByRoleIdRes) ProtoMessage() {}

func (x *QueryApisByRoleIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryApisByRoleIdRes.ProtoReflect.Descriptor instead.
func (*QueryApisByRoleIdRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{34}
}

func (x *QueryApisByRoleIdRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryApisByRoleIdRes) GetList() []*QueryApisByRoleIdData {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateApisRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64   `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	UserId int64   `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ApiIds []int64 `protobuf:"varint,3,rep,packed,name=apiIds,proto3" json:"apiIds,omitempty"`
}

func (x *UpdateApisRoleReq) Reset() {
	*x = UpdateApisRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApisRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApisRoleReq) ProtoMessage() {}

func (x *UpdateApisRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApisRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateApisRoleReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateApisRoleReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateApisRoleReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateApisRoleReq) GetApiIds() []int64 {
	if x != nil {
		return x.ApiIds
	}
	return nil
}

type MenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MenuListReq) Reset() {
	*x = MenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListReq) ProtoMessage() {}

func (x *MenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListReq.ProtoReflect.Descriptor instead.
func (*MenuListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{36}
}

func (x *MenuListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuListReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MenuListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId int64 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	//父ID
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//菜单名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	//菜单图标
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	//菜单图标
	Sort int64 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	//忽略之前定义的规则，一直显示根路由(1忽略，2不忽略)
	AlwaysShow int64 `protobuf:"varint,8,opt,name=alwaysShow,proto3" json:"alwaysShow,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	//菜单在侧边栏隐藏(1隐藏，2显示)
	Hidden int64 `protobuf:"varint,10,opt,name=hidden,proto3" json:"hidden,omitempty"`
	//面包屑可见性(1 可见/隐藏, 默认可见)
	Breadcrumb int64 `protobuf:"varint,11,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//路由地址
	Path string `protobuf:"bytes,12,opt,name=path,proto3" json:"path,omitempty"`
	//跳转路由
	JumpPath string `protobuf:"bytes,13,opt,name=jumpPath,proto3" json:"jumpPath,omitempty"`
	//组件路径
	Component string `protobuf:"bytes,14,opt,name=component,proto3" json:"component,omitempty"`
	//是否外链 1是 0否
	IsFrame int64 `protobuf:"varint,15,opt,name=is_frame,json=isFrame,proto3" json:"is_frame,omitempty"`
	//所属模块
	ModuleType string `protobuf:"bytes,16,opt,name=moduleType,proto3" json:"moduleType,omitempty"`
	//模型ID
	ModelId int64 `protobuf:"varint,17,opt,name=modelId,proto3" json:"modelId,omitempty"`
	//创建日期
	CreatedAt string `protobuf:"bytes,18,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//修改日期
	UpdatedAt string `protobuf:"bytes,19,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//子菜单集合
	Children []*MenuListData `protobuf:"bytes,20,rep,name=children,proto3" json:"children,omitempty"`
	//菜单是否被 <keep-alive> 缓存(1不缓存，2缓存)
	NoCache int64 `protobuf:"varint,21,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//在其它路由时，想在侧边栏高亮的路由
	ActiveMenu string `protobuf:"bytes,22,opt,name=activeMenu,proto3" json:"activeMenu,omitempty"`
	//重定向路径
	Redirect string `protobuf:"bytes,23,opt,name=redirect,proto3" json:"redirect,omitempty"`
	CreateBy int64  `protobuf:"varint,24,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy int64  `protobuf:"varint,25,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *MenuListData) Reset() {
	*x = MenuListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListData) ProtoMessage() {}

func (x *MenuListData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListData.ProtoReflect.Descriptor instead.
func (*MenuListData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{37}
}

func (x *MenuListData) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *MenuListData) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MenuListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuListData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuListData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuListData) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuListData) GetAlwaysShow() int64 {
	if x != nil {
		return x.AlwaysShow
	}
	return 0
}

func (x *MenuListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MenuListData) GetHidden() int64 {
	if x != nil {
		return x.Hidden
	}
	return 0
}

func (x *MenuListData) GetBreadcrumb() int64 {
	if x != nil {
		return x.Breadcrumb
	}
	return 0
}

func (x *MenuListData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuListData) GetJumpPath() string {
	if x != nil {
		return x.JumpPath
	}
	return ""
}

func (x *MenuListData) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuListData) GetIsFrame() int64 {
	if x != nil {
		return x.IsFrame
	}
	return 0
}

func (x *MenuListData) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (x *MenuListData) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *MenuListData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MenuListData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MenuListData) GetChildren() []*MenuListData {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *MenuListData) GetNoCache() int64 {
	if x != nil {
		return x.NoCache
	}
	return 0
}

func (x *MenuListData) GetActiveMenu() string {
	if x != nil {
		return x.ActiveMenu
	}
	return ""
}

func (x *MenuListData) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *MenuListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type MenuListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MenuListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MenuListRes) Reset() {
	*x = MenuListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuListRes) ProtoMessage() {}

func (x *MenuListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuListRes.ProtoReflect.Descriptor instead.
func (*MenuListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{38}
}

func (x *MenuListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MenuListRes) GetList() []*MenuListData {
	if x != nil {
		return x.List
	}
	return nil
}

type MenuTreeListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MenuListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MenuTreeListRes) Reset() {
	*x = MenuTreeListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuTreeListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuTreeListRes) ProtoMessage() {}

func (x *MenuTreeListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuTreeListRes.ProtoReflect.Descriptor instead.
func (*MenuTreeListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{39}
}

func (x *MenuTreeListRes) GetList() []*MenuListData {
	if x != nil {
		return x.List
	}
	return nil
}

type MenuAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//父ID
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	//菜单名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//菜单图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	//菜单图标
	Sort int64 `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	//忽略之前定义的规则，一直显示根路由(1忽略，2不忽略)
	AlwaysShow int64 `protobuf:"varint,7,opt,name=alwaysShow,proto3" json:"alwaysShow,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	//菜单在侧边栏隐藏(1隐藏，2显示)
	Hidden int64 `protobuf:"varint,9,opt,name=hidden,proto3" json:"hidden,omitempty"`
	//面包屑可见性(1 可见/隐藏, 默认可见)
	Breadcrumb int64 `protobuf:"varint,10,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//路由地址
	Path string `protobuf:"bytes,11,opt,name=path,proto3" json:"path,omitempty"`
	//跳转路由
	JumpPath string `protobuf:"bytes,12,opt,name=jumpPath,proto3" json:"jumpPath,omitempty"`
	//组件路径
	Component string `protobuf:"bytes,13,opt,name=component,proto3" json:"component,omitempty"`
	//是否外链 1是 0否
	IsFrame int64 `protobuf:"varint,14,opt,name=is_frame,json=isFrame,proto3" json:"is_frame,omitempty"`
	//所属模块
	ModuleType string `protobuf:"bytes,15,opt,name=moduleType,proto3" json:"moduleType,omitempty"`
	//模型ID
	ModelId int64 `protobuf:"varint,16,opt,name=modelId,proto3" json:"modelId,omitempty"`
	//菜单是否被 <keep-alive> 缓存(1不缓存，2缓存)
	NoCache int64 `protobuf:"varint,17,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//在其它路由时，想在侧边栏高亮的路由
	ActiveMenu string `protobuf:"bytes,18,opt,name=activeMenu,proto3" json:"activeMenu,omitempty"`
	//重定向路径
	Redirect string `protobuf:"bytes,19,opt,name=redirect,proto3" json:"redirect,omitempty"`
	CreateBy int64  `protobuf:"varint,20,opt,name=createBy,proto3" json:"createBy,omitempty"`
}

func (x *MenuAddReq) Reset() {
	*x = MenuAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuAddReq) ProtoMessage() {}

func (x *MenuAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuAddReq.ProtoReflect.Descriptor instead.
func (*MenuAddReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{40}
}

func (x *MenuAddReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MenuAddReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuAddReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuAddReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuAddReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuAddReq) GetAlwaysShow() int64 {
	if x != nil {
		return x.AlwaysShow
	}
	return 0
}

func (x *MenuAddReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MenuAddReq) GetHidden() int64 {
	if x != nil {
		return x.Hidden
	}
	return 0
}

func (x *MenuAddReq) GetBreadcrumb() int64 {
	if x != nil {
		return x.Breadcrumb
	}
	return 0
}

func (x *MenuAddReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuAddReq) GetJumpPath() string {
	if x != nil {
		return x.JumpPath
	}
	return ""
}

func (x *MenuAddReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuAddReq) GetIsFrame() int64 {
	if x != nil {
		return x.IsFrame
	}
	return 0
}

func (x *MenuAddReq) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (x *MenuAddReq) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *MenuAddReq) GetNoCache() int64 {
	if x != nil {
		return x.NoCache
	}
	return 0
}

func (x *MenuAddReq) GetActiveMenu() string {
	if x != nil {
		return x.ActiveMenu
	}
	return ""
}

func (x *MenuAddReq) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuAddReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

type MenuUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId int64 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	//父ID
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//菜单名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	//菜单图标
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	//菜单图标
	Sort int64 `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	//忽略之前定义的规则，一直显示根路由(1忽略，2不忽略)
	AlwaysShow int64 `protobuf:"varint,8,opt,name=alwaysShow,proto3" json:"alwaysShow,omitempty"`
	//状态（2正常 1停用）
	Status int64 `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	//菜单在侧边栏隐藏(1隐藏，2显示)
	Hidden int64 `protobuf:"varint,10,opt,name=hidden,proto3" json:"hidden,omitempty"`
	//面包屑可见性(1 可见/隐藏, 默认可见)
	Breadcrumb int64 `protobuf:"varint,11,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//路由地址
	Path string `protobuf:"bytes,12,opt,name=path,proto3" json:"path,omitempty"`
	//跳转路由
	JumpPath string `protobuf:"bytes,13,opt,name=jumpPath,proto3" json:"jumpPath,omitempty"`
	//组件路径
	Component string `protobuf:"bytes,14,opt,name=component,proto3" json:"component,omitempty"`
	//是否外链 1是 0否
	IsFrame int64 `protobuf:"varint,15,opt,name=is_frame,json=isFrame,proto3" json:"is_frame,omitempty"`
	//所属模块
	ModuleType string `protobuf:"bytes,16,opt,name=moduleType,proto3" json:"moduleType,omitempty"`
	//模型ID
	ModelId int64 `protobuf:"varint,17,opt,name=modelId,proto3" json:"modelId,omitempty"`
	//菜单是否被 <keep-alive> 缓存(1不缓存，2缓存)
	NoCache int64 `protobuf:"varint,18,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//在其它路由时，想在侧边栏高亮的路由
	ActiveMenu string `protobuf:"bytes,19,opt,name=activeMenu,proto3" json:"activeMenu,omitempty"`
	//重定向路径
	Redirect string `protobuf:"bytes,20,opt,name=redirect,proto3" json:"redirect,omitempty"`
	UpdateBy int64  `protobuf:"varint,21,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *MenuUpdateReq) Reset() {
	*x = MenuUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuUpdateReq) ProtoMessage() {}

func (x *MenuUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuUpdateReq.ProtoReflect.Descriptor instead.
func (*MenuUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{41}
}

func (x *MenuUpdateReq) GetMenuId() int64 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *MenuUpdateReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MenuUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuUpdateReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuUpdateReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuUpdateReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuUpdateReq) GetAlwaysShow() int64 {
	if x != nil {
		return x.AlwaysShow
	}
	return 0
}

func (x *MenuUpdateReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MenuUpdateReq) GetHidden() int64 {
	if x != nil {
		return x.Hidden
	}
	return 0
}

func (x *MenuUpdateReq) GetBreadcrumb() int64 {
	if x != nil {
		return x.Breadcrumb
	}
	return 0
}

func (x *MenuUpdateReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuUpdateReq) GetJumpPath() string {
	if x != nil {
		return x.JumpPath
	}
	return ""
}

func (x *MenuUpdateReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuUpdateReq) GetIsFrame() int64 {
	if x != nil {
		return x.IsFrame
	}
	return 0
}

func (x *MenuUpdateReq) GetModuleType() string {
	if x != nil {
		return x.ModuleType
	}
	return ""
}

func (x *MenuUpdateReq) GetModelId() int64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *MenuUpdateReq) GetNoCache() int64 {
	if x != nil {
		return x.NoCache
	}
	return 0
}

func (x *MenuUpdateReq) GetActiveMenu() string {
	if x != nil {
		return x.ActiveMenu
	}
	return ""
}

func (x *MenuUpdateReq) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type MenuDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuIds []int64 `protobuf:"varint,1,rep,packed,name=menuIds,proto3" json:"menuIds,omitempty"`
}

func (x *MenuDeleteReq) Reset() {
	*x = MenuDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuDeleteReq) ProtoMessage() {}

func (x *MenuDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuDeleteReq.ProtoReflect.Descriptor instead.
func (*MenuDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{42}
}

func (x *MenuDeleteReq) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type MenuUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *MenuUserReq) Reset() {
	*x = MenuUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuUserReq) ProtoMessage() {}

func (x *MenuUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuUserReq.ProtoReflect.Descriptor instead.
func (*MenuUserReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{43}
}

func (x *MenuUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DictDataAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典排序
	DictSort int64 `protobuf:"varint,1,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	//字典标签
	DictLabel string `protobuf:"bytes,2,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典键值
	DictValue string `protobuf:"bytes,3,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,4,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//样式属性（其他样式扩展）
	CssClass string `protobuf:"bytes,5,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	//表格回显样式
	ListClass string `protobuf:"bytes,6,opt,name=listClass,proto3" json:"listClass,omitempty"`
	//是否默认（1是 2否）
	IsDefault int64 `protobuf:"varint,7,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	//状态（2正常 1停用）
	Status   int64  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy int64  `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	Remark   string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *DictDataAddReq) Reset() {
	*x = DictDataAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataAddReq) ProtoMessage() {}

func (x *DictDataAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataAddReq.ProtoReflect.Descriptor instead.
func (*DictDataAddReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{44}
}

func (x *DictDataAddReq) GetDictSort() int64 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictDataAddReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictDataAddReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictDataAddReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictDataAddReq) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *DictDataAddReq) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *DictDataAddReq) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *DictDataAddReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDataAddReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DictDataAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DictDataListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典标签
	DictLabel string `protobuf:"bytes,1,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典键值
	DictValue string `protobuf:"bytes,2,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//状态（2正常 1停用）
	Status   int64           `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	PageInfo *common.PageReq `protobuf:"bytes,5,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *DictDataListReq) Reset() {
	*x = DictDataListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataListReq) ProtoMessage() {}

func (x *DictDataListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataListReq.ProtoReflect.Descriptor instead.
func (*DictDataListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{45}
}

func (x *DictDataListReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictDataListReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictDataListReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictDataListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDataListReq) GetPageInfo() *common.PageReq {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type DictDataListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典编码
	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	//字典排序
	DictSort int64 `protobuf:"varint,2,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	//字典标签
	DictLabel string `protobuf:"bytes,3,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典键值
	DictValue string `protobuf:"bytes,4,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//样式属性（其他样式扩展）
	CssClass string `protobuf:"bytes,6,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	//表格回显样式
	ListClass string `protobuf:"bytes,7,opt,name=listClass,proto3" json:"listClass,omitempty"`
	//是否默认（1是 2否）
	IsDefault int64 `protobuf:"varint,8,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	//状态（2正常 1停用）
	Status   int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy int64  `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy int64  `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark   string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建日期
	CreatedAt string `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//修改日期
	UpdatedAt string `protobuf:"bytes,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DictDataListData) Reset() {
	*x = DictDataListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataListData) ProtoMessage() {}

func (x *DictDataListData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataListData.ProtoReflect.Descriptor instead.
func (*DictDataListData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{46}
}

func (x *DictDataListData) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *DictDataListData) GetDictSort() int64 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictDataListData) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictDataListData) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictDataListData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictDataListData) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *DictDataListData) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *DictDataListData) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *DictDataListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDataListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DictDataListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *DictDataListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictDataListData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DictDataListData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DictDataListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DictDataListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DictDataListRes) Reset() {
	*x = DictDataListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataListRes) ProtoMessage() {}

func (x *DictDataListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataListRes.ProtoReflect.Descriptor instead.
func (*DictDataListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{47}
}

func (x *DictDataListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DictDataListRes) GetList() []*DictDataListData {
	if x != nil {
		return x.List
	}
	return nil
}

type DictDataUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典编码
	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
	//字典排序
	DictSort int64 `protobuf:"varint,2,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	//字典标签
	DictLabel string `protobuf:"bytes,3,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典键值
	DictValue string `protobuf:"bytes,4,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//样式属性（其他样式扩展）
	CssClass string `protobuf:"bytes,6,opt,name=cssClass,proto3" json:"cssClass,omitempty"`
	//表格回显样式
	ListClass string `protobuf:"bytes,7,opt,name=listClass,proto3" json:"listClass,omitempty"`
	//是否默认（1是 2否）
	IsDefault int64 `protobuf:"varint,8,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	//状态（2正常 1停用）
	Status   int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy int64  `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark   string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *DictDataUpdateReq) Reset() {
	*x = DictDataUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataUpdateReq) ProtoMessage() {}

func (x *DictDataUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataUpdateReq.ProtoReflect.Descriptor instead.
func (*DictDataUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{48}
}

func (x *DictDataUpdateReq) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

func (x *DictDataUpdateReq) GetDictSort() int64 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictDataUpdateReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictDataUpdateReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictDataUpdateReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictDataUpdateReq) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *DictDataUpdateReq) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *DictDataUpdateReq) GetIsDefault() int64 {
	if x != nil {
		return x.IsDefault
	}
	return 0
}

func (x *DictDataUpdateReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDataUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *DictDataUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DictDataDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCodes []int64 `protobuf:"varint,1,rep,packed,name=dictCodes,proto3" json:"dictCodes,omitempty"`
}

func (x *DictDataDeleteReq) Reset() {
	*x = DictDataDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataDeleteReq) ProtoMessage() {}

func (x *DictDataDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataDeleteReq.ProtoReflect.Descriptor instead.
func (*DictDataDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{49}
}

func (x *DictDataDeleteReq) GetDictCodes() []int64 {
	if x != nil {
		return x.DictCodes
	}
	return nil
}

type DictDataInfoByDictCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode int64 `protobuf:"varint,1,opt,name=dictCode,proto3" json:"dictCode,omitempty"`
}

func (x *DictDataInfoByDictCodeReq) Reset() {
	*x = DictDataInfoByDictCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataInfoByDictCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataInfoByDictCodeReq) ProtoMessage() {}

func (x *DictDataInfoByDictCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataInfoByDictCodeReq.ProtoReflect.Descriptor instead.
func (*DictDataInfoByDictCodeReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{50}
}

func (x *DictDataInfoByDictCodeReq) GetDictCode() int64 {
	if x != nil {
		return x.DictCode
	}
	return 0
}

type DictDataListByDictTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictType string `protobuf:"bytes,1,opt,name=dictType,proto3" json:"dictType,omitempty"`
}

func (x *DictDataListByDictTypeReq) Reset() {
	*x = DictDataListByDictTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataListByDictTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataListByDictTypeReq) ProtoMessage() {}

func (x *DictDataListByDictTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataListByDictTypeReq.ProtoReflect.Descriptor instead.
func (*DictDataListByDictTypeReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{51}
}

func (x *DictDataListByDictTypeReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

//获取字典分类列表---
type DictTypeAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典名称
	DictName string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,2,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//状态（2正常 1停用）
	Status   int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy int64  `protobuf:"varint,4,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	Remark   string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *DictTypeAddReq) Reset() {
	*x = DictTypeAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeAddReq) ProtoMessage() {}

func (x *DictTypeAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeAddReq.ProtoReflect.Descriptor instead.
func (*DictTypeAddReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{52}
}

func (x *DictTypeAddReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictTypeAddReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictTypeAddReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictTypeAddReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DictTypeAddReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DictTypeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典名称
	DictName string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,2,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//字典状态 （2正常 1停用)
	Status   int64           `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	PageInfo *common.PageReq `protobuf:"bytes,4,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *DictTypeListReq) Reset() {
	*x = DictTypeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeListReq) ProtoMessage() {}

func (x *DictTypeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeListReq.ProtoReflect.Descriptor instead.
func (*DictTypeListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{53}
}

func (x *DictTypeListReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictTypeListReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictTypeListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictTypeListReq) GetPageInfo() *common.PageReq {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type DictTypeListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典主键
	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
	//字典名称
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//状态（2正常 1停用）
	Status   int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy int64  `protobuf:"varint,5,opt,name=create_by,json=createBy,proto3" json:"create_by,omitempty"`
	UpdateBy int64  `protobuf:"varint,6,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	Remark   string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建日期
	CreatedAt string `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//修改日期
	UpdatedAt string `protobuf:"bytes,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DictTypeListData) Reset() {
	*x = DictTypeListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeListData) ProtoMessage() {}

func (x *DictTypeListData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeListData.ProtoReflect.Descriptor instead.
func (*DictTypeListData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{54}
}

func (x *DictTypeListData) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *DictTypeListData) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictTypeListData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictTypeListData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictTypeListData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DictTypeListData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *DictTypeListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictTypeListData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DictTypeListData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DictTypeListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DictTypeListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DictTypeListRes) Reset() {
	*x = DictTypeListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeListRes) ProtoMessage() {}

func (x *DictTypeListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeListRes.ProtoReflect.Descriptor instead.
func (*DictTypeListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{55}
}

func (x *DictTypeListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DictTypeListRes) GetList() []*DictTypeListData {
	if x != nil {
		return x.List
	}
	return nil
}

type DictTypeInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典主键
	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
}

func (x *DictTypeInfoReq) Reset() {
	*x = DictTypeInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeInfoReq) ProtoMessage() {}

func (x *DictTypeInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeInfoReq.ProtoReflect.Descriptor instead.
func (*DictTypeInfoReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{56}
}

func (x *DictTypeInfoReq) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

type DictTypeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典主键
	DictId int64 `protobuf:"varint,1,opt,name=dictId,proto3" json:"dictId,omitempty"`
	//字典名称
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	DictType string `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType,omitempty"`
	//状态（2正常 1停用）
	Status   int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	UpdateBy int64  `protobuf:"varint,5,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	Remark   string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *DictTypeUpdateReq) Reset() {
	*x = DictTypeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeUpdateReq) ProtoMessage() {}

func (x *DictTypeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeUpdateReq.ProtoReflect.Descriptor instead.
func (*DictTypeUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{57}
}

func (x *DictTypeUpdateReq) GetDictId() int64 {
	if x != nil {
		return x.DictId
	}
	return 0
}

func (x *DictTypeUpdateReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictTypeUpdateReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictTypeUpdateReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictTypeUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *DictTypeUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DictTypeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictIds []int64 `protobuf:"varint,1,rep,packed,name=dictIds,proto3" json:"dictIds,omitempty"`
}

func (x *DictTypeDeleteReq) Reset() {
	*x = DictTypeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeDeleteReq) ProtoMessage() {}

func (x *DictTypeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeDeleteReq.ProtoReflect.Descriptor instead.
func (*DictTypeDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{58}
}

func (x *DictTypeDeleteReq) GetDictIds() []int64 {
	if x != nil {
		return x.DictIds
	}
	return nil
}

//loginLog start------登录日志---------------
type LoginLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//登录账号
	LoginName string `protobuf:"bytes,1,opt,name=loginName,proto3" json:"loginName,omitempty"`
	//字典名称
	LoginUid int64 `protobuf:"varint,2,opt,name=loginUid,proto3" json:"loginUid,omitempty"`
	//登录IP地址
	Ipaddr string `protobuf:"bytes,3,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	//登录地点
	LoginLocation string `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"`
	//浏览器类型
	Browser string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`
	//操作系统
	Os string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`
	//登录状态（2成功 1失败）
	Status int32 `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	//提示消息
	Msg string `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`
	//登录时间
	LoginTime int64 `protobuf:"varint,9,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	//操作系统
	Module string `protobuf:"bytes,10,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *LoginLogReq) Reset() {
	*x = LoginLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogReq) ProtoMessage() {}

func (x *LoginLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogReq.ProtoReflect.Descriptor instead.
func (*LoginLogReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{59}
}

func (x *LoginLogReq) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *LoginLogReq) GetLoginUid() int64 {
	if x != nil {
		return x.LoginUid
	}
	return 0
}

func (x *LoginLogReq) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *LoginLogReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginLogReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginLogReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginLogReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LoginLogReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginLogReq) GetLoginTime() int64 {
	if x != nil {
		return x.LoginTime
	}
	return 0
}

func (x *LoginLogReq) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type LoginlogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//登录账号
	LoginName string `protobuf:"bytes,1,opt,name=loginName,proto3" json:"loginName,omitempty"`
	//登录IP地址
	Ipaddr string `protobuf:"bytes,2,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	//登录地点
	LoginLocation string `protobuf:"bytes,3,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"`
	//登录状态（2成功 1失败）
	Status   int32           `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	PageInfo *common.PageReq `protobuf:"bytes,5,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *LoginlogListReq) Reset() {
	*x = LoginlogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginlogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginlogListReq) ProtoMessage() {}

func (x *LoginlogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginlogListReq.ProtoReflect.Descriptor instead.
func (*LoginlogListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{60}
}

func (x *LoginlogListReq) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *LoginlogListReq) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *LoginlogListReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginlogListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LoginlogListReq) GetPageInfo() *common.PageReq {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type LoginlogListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//登录账号
	LoginName string `protobuf:"bytes,1,opt,name=loginName,proto3" json:"loginName,omitempty"`
	//字典名称
	LoginUid int64 `protobuf:"varint,2,opt,name=loginUid,proto3" json:"loginUid,omitempty"`
	//登录IP地址
	Ipaddr string `protobuf:"bytes,3,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	//登录地点
	LoginLocation string `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"`
	//浏览器类型
	Browser string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`
	//操作系统
	Os string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`
	//登录状态（2成功 1失败）
	Status int32 `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	//提示消息
	Msg string `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`
	//登录时间
	LoginTime string `protobuf:"bytes,9,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	//编号
	LoginId int64 `protobuf:"varint,10,opt,name=loginId,proto3" json:"loginId,omitempty"`
}

func (x *LoginlogListData) Reset() {
	*x = LoginlogListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginlogListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginlogListData) ProtoMessage() {}

func (x *LoginlogListData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginlogListData.ProtoReflect.Descriptor instead.
func (*LoginlogListData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{61}
}

func (x *LoginlogListData) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *LoginlogListData) GetLoginUid() int64 {
	if x != nil {
		return x.LoginUid
	}
	return 0
}

func (x *LoginlogListData) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *LoginlogListData) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginlogListData) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginlogListData) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginlogListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *LoginlogListData) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginlogListData) GetLoginTime() string {
	if x != nil {
		return x.LoginTime
	}
	return ""
}

func (x *LoginlogListData) GetLoginId() int64 {
	if x != nil {
		return x.LoginId
	}
	return 0
}

type LoginlogListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*LoginlogListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *LoginlogListRes) Reset() {
	*x = LoginlogListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginlogListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginlogListRes) ProtoMessage() {}

func (x *LoginlogListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginlogListRes.ProtoReflect.Descriptor instead.
func (*LoginlogListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{62}
}

func (x *LoginlogListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LoginlogListRes) GetList() []*LoginlogListData {
	if x != nil {
		return x.List
	}
	return nil
}

type LoginlogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginIds []int64 `protobuf:"varint,1,rep,packed,name=loginIds,proto3" json:"loginIds,omitempty"`
}

func (x *LoginlogDeleteReq) Reset() {
	*x = LoginlogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginlogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginlogDeleteReq) ProtoMessage() {}

func (x *LoginlogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginlogDeleteReq.ProtoReflect.Descriptor instead.
func (*LoginlogDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{63}
}

func (x *LoginlogDeleteReq) GetLoginIds() []int64 {
	if x != nil {
		return x.LoginIds
	}
	return nil
}

//UserOnline start----------用户在线-----------
type UserOnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户标识
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//用户token
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	//登录时间
	CreateTime int64 `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	//用户名
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	//用户id
	UserId int64 `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	//登录ip
	Ip string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	//浏览器
	Explorer string `protobuf:"bytes,7,opt,name=explorer,proto3" json:"explorer,omitempty"`
	//操作系统
	Os string `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`
}

func (x *UserOnlineReq) Reset() {
	*x = UserOnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOnlineReq) ProtoMessage() {}

func (x *UserOnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOnlineReq.ProtoReflect.Descriptor instead.
func (*UserOnlineReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{64}
}

func (x *UserOnlineReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UserOnlineReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserOnlineReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UserOnlineReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserOnlineReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserOnlineReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UserOnlineReq) GetExplorer() string {
	if x != nil {
		return x.Explorer
	}
	return ""
}

func (x *UserOnlineReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

//操作日志----start---
type OperLogListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`               //系统模块
	OperName     string          `protobuf:"bytes,2,opt,name=operName,proto3" json:"operName,omitempty"`         //操作人员
	Status       string          `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`             //操作状态
	BusinessType string          `protobuf:"bytes,4,opt,name=businessType,proto3" json:"businessType,omitempty"` //业务类型（0其它 1新增 2修改 3删除）
	PageInfo     *common.PageReq `protobuf:"bytes,5,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *OperLogListReq) Reset() {
	*x = OperLogListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogListReq) ProtoMessage() {}

func (x *OperLogListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogListReq.ProtoReflect.Descriptor instead.
func (*OperLogListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{65}
}

func (x *OperLogListReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperLogListReq) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogListReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OperLogListReq) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *OperLogListReq) GetPageInfo() *common.PageReq {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type OperLogListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OperLogInfoRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *OperLogListRes) Reset() {
	*x = OperLogListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogListRes) ProtoMessage() {}

func (x *OperLogListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogListRes.ProtoReflect.Descriptor instead.
func (*OperLogListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{66}
}

func (x *OperLogListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OperLogListRes) GetList() []*OperLogInfoRes {
	if x != nil {
		return x.List
	}
	return nil
}

type OperLogInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperId int64 `protobuf:"varint,1,opt,name=operId,proto3" json:"operId,omitempty"`
}

func (x *OperLogInfoReq) Reset() {
	*x = OperLogInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogInfoReq) ProtoMessage() {}

func (x *OperLogInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogInfoReq.ProtoReflect.Descriptor instead.
func (*OperLogInfoReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{67}
}

func (x *OperLogInfoReq) GetOperId() int64 {
	if x != nil {
		return x.OperId
	}
	return 0
}

type OperLogInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperId        int64  `protobuf:"varint,1,opt,name=operId,proto3" json:"operId,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                 //操作模块标题
	BusinessType  int32  `protobuf:"varint,3,opt,name=businessType,proto3" json:"businessType,omitempty"`  //业务类型（0其它 1新增 2修改 3删除
	Method        string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`               //方法名称
	RequestMethod string `protobuf:"bytes,5,opt,name=requestMethod,proto3" json:"requestMethod,omitempty"` //请求方式
	OperatorType  int32  `protobuf:"varint,6,opt,name=operatorType,proto3" json:"operatorType,omitempty"`  //操作类别（0其它 1后台用户 2手机端用户）
	OperName      string `protobuf:"bytes,7,opt,name=operName,proto3" json:"operName,omitempty"`           //操作人员
	OperUrl       string `protobuf:"bytes,8,opt,name=operUrl,proto3" json:"operUrl,omitempty"`             //请求URL
	OperIp        string `protobuf:"bytes,9,opt,name=operIp,proto3" json:"operIp,omitempty"`               //请求主机地址
	OperLocation  string `protobuf:"bytes,10,opt,name=operLocation,proto3" json:"operLocation,omitempty"`  //操作地点
	OperParam     string `protobuf:"bytes,11,opt,name=operParam,proto3" json:"operParam,omitempty"`        //请求参数
	JsonResult    string `protobuf:"bytes,12,opt,name=jsonResult,proto3" json:"jsonResult,omitempty"`      //返回参数
	Status        string `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`              //操作状态（2正常 1异常）
	ErrorMsg      string `protobuf:"bytes,14,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`          //错误消息
	OperTime      string `protobuf:"bytes,15,opt,name=operTime,proto3" json:"operTime,omitempty"`          //操作时间
	TimeCost      int64  `protobuf:"varint,16,opt,name=timeCost,proto3" json:"timeCost,omitempty"`         //请求耗时(ms)
	UserId        int64  `protobuf:"varint,17,opt,name=userId,proto3" json:"userId,omitempty"`             //操作用户Id
}

func (x *OperLogInfoRes) Reset() {
	*x = OperLogInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogInfoRes) ProtoMessage() {}

func (x *OperLogInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogInfoRes.ProtoReflect.Descriptor instead.
func (*OperLogInfoRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{68}
}

func (x *OperLogInfoRes) GetOperId() int64 {
	if x != nil {
		return x.OperId
	}
	return 0
}

func (x *OperLogInfoRes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperLogInfoRes) GetBusinessType() int32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLogInfoRes) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *OperLogInfoRes) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OperLogInfoRes) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *OperLogInfoRes) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogInfoRes) GetOperUrl() string {
	if x != nil {
		return x.OperUrl
	}
	return ""
}

func (x *OperLogInfoRes) GetOperIp() string {
	if x != nil {
		return x.OperIp
	}
	return ""
}

func (x *OperLogInfoRes) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OperLogInfoRes) GetOperParam() string {
	if x != nil {
		return x.OperParam
	}
	return ""
}

func (x *OperLogInfoRes) GetJsonResult() string {
	if x != nil {
		return x.JsonResult
	}
	return ""
}

func (x *OperLogInfoRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OperLogInfoRes) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *OperLogInfoRes) GetOperTime() string {
	if x != nil {
		return x.OperTime
	}
	return ""
}

func (x *OperLogInfoRes) GetTimeCost() int64 {
	if x != nil {
		return x.TimeCost
	}
	return 0
}

func (x *OperLogInfoRes) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OperLogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperId []int64 `protobuf:"varint,1,rep,packed,name=operId,proto3" json:"operId,omitempty"`
}

func (x *OperLogDeleteReq) Reset() {
	*x = OperLogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogDeleteReq) ProtoMessage() {}

func (x *OperLogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogDeleteReq.ProtoReflect.Descriptor instead.
func (*OperLogDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{69}
}

func (x *OperLogDeleteReq) GetOperId() []int64 {
	if x != nil {
		return x.OperId
	}
	return nil
}

type OperLogSaveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                 //操作模块标题
	BusinessType  string `protobuf:"bytes,2,opt,name=businessType,proto3" json:"businessType,omitempty"`   //业务类型（0其它 1新增 2修改 3删除
	Method        string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`               //方法名称
	RequestMethod string `protobuf:"bytes,4,opt,name=requestMethod,proto3" json:"requestMethod,omitempty"` //请求方式
	OperatorType  string `protobuf:"bytes,5,opt,name=operatorType,proto3" json:"operatorType,omitempty"`   //操作类别（0其它 1后台用户 2手机端用户）
	OperName      string `protobuf:"bytes,6,opt,name=operName,proto3" json:"operName,omitempty"`           //操作人员
	OperUrl       string `protobuf:"bytes,7,opt,name=operUrl,proto3" json:"operUrl,omitempty"`             //请求URL
	OperIp        string `protobuf:"bytes,8,opt,name=operIp,proto3" json:"operIp,omitempty"`               //请求主机地址
	OperLocation  string `protobuf:"bytes,9,opt,name=operLocation,proto3" json:"operLocation,omitempty"`   //操作地点
	OperParam     string `protobuf:"bytes,10,opt,name=operParam,proto3" json:"operParam,omitempty"`        //请求参数
	JsonResult    string `protobuf:"bytes,11,opt,name=jsonResult,proto3" json:"jsonResult,omitempty"`      //返回参数
	Status        string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`              //操作状态（2正常 1异常）
	ErrorMsg      string `protobuf:"bytes,13,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`          //错误消息
	OperTime      int64  `protobuf:"varint,14,opt,name=operTime,proto3" json:"operTime,omitempty"`         //操作时间
	TimeCost      int64  `protobuf:"varint,15,opt,name=timeCost,proto3" json:"timeCost,omitempty"`         //请求耗时(ms)
	UserId        int64  `protobuf:"varint,16,opt,name=userId,proto3" json:"userId,omitempty"`             //操作用户Id
}

func (x *OperLogSaveData) Reset() {
	*x = OperLogSaveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogSaveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogSaveData) ProtoMessage() {}

func (x *OperLogSaveData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogSaveData.ProtoReflect.Descriptor instead.
func (*OperLogSaveData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{70}
}

func (x *OperLogSaveData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperLogSaveData) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *OperLogSaveData) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *OperLogSaveData) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OperLogSaveData) GetOperatorType() string {
	if x != nil {
		return x.OperatorType
	}
	return ""
}

func (x *OperLogSaveData) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogSaveData) GetOperUrl() string {
	if x != nil {
		return x.OperUrl
	}
	return ""
}

func (x *OperLogSaveData) GetOperIp() string {
	if x != nil {
		return x.OperIp
	}
	return ""
}

func (x *OperLogSaveData) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OperLogSaveData) GetOperParam() string {
	if x != nil {
		return x.OperParam
	}
	return ""
}

func (x *OperLogSaveData) GetJsonResult() string {
	if x != nil {
		return x.JsonResult
	}
	return ""
}

func (x *OperLogSaveData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OperLogSaveData) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *OperLogSaveData) GetOperTime() int64 {
	if x != nil {
		return x.OperTime
	}
	return 0
}

func (x *OperLogSaveData) GetTimeCost() int64 {
	if x != nil {
		return x.TimeCost
	}
	return 0
}

func (x *OperLogSaveData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OperLogSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogList []*OperLogSaveData `protobuf:"bytes,1,rep,name=logList,proto3" json:"logList,omitempty"`
}

func (x *OperLogSaveReq) Reset() {
	*x = OperLogSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogSaveReq) ProtoMessage() {}

func (x *OperLogSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogSaveReq.ProtoReflect.Descriptor instead.
func (*OperLogSaveReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{71}
}

func (x *OperLogSaveReq) GetLogList() []*OperLogSaveData {
	if x != nil {
		return x.LogList
	}
	return nil
}

//接口----start--------
//接口详情
type ApisInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId int64 `protobuf:"varint,1,opt,name=ApiId,proto3" json:"ApiId,omitempty"`
}

func (x *ApisInfoReq) Reset() {
	*x = ApisInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisInfoReq) ProtoMessage() {}

func (x *ApisInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisInfoReq.ProtoReflect.Descriptor instead.
func (*ApisInfoReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{72}
}

func (x *ApisInfoReq) GetApiId() int64 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type ApisInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId      int64  `protobuf:"varint,1,opt,name=apiId,proto3" json:"apiId,omitempty"`
	Handle     string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Path       string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Method     string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
	Category   string `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	CreatedAt  string `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  string `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreateBy   int64  `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy   int64  `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Permission string `protobuf:"bytes,11,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *ApisInfoRes) Reset() {
	*x = ApisInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisInfoRes) ProtoMessage() {}

func (x *ApisInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisInfoRes.ProtoReflect.Descriptor instead.
func (*ApisInfoRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{73}
}

func (x *ApisInfoRes) GetApiId() int64 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *ApisInfoRes) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *ApisInfoRes) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ApisInfoRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApisInfoRes) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApisInfoRes) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ApisInfoRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ApisInfoRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ApisInfoRes) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ApisInfoRes) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ApisInfoRes) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type ApisListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method   string          `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`     //接口类型-请求方式
	Path     string          `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`         //访问路径
	Category string          `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"` //所属类别
	PageInfo *common.PageReq `protobuf:"bytes,5,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *ApisListReq) Reset() {
	*x = ApisListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisListReq) ProtoMessage() {}

func (x *ApisListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisListReq.ProtoReflect.Descriptor instead.
func (*ApisListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{74}
}

func (x *ApisListReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApisListReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApisListReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ApisListReq) GetPageInfo() *common.PageReq {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type ApisListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ApisInfoRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ApisListRes) Reset() {
	*x = ApisListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisListRes) ProtoMessage() {}

func (x *ApisListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisListRes.ProtoReflect.Descriptor instead.
func (*ApisListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{75}
}

func (x *ApisListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ApisListRes) GetList() []*ApisInfoRes {
	if x != nil {
		return x.List
	}
	return nil
}

type ApisTreeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId    int64           `protobuf:"varint,1,opt,name=apiId,proto3" json:"apiId,omitempty"`
	Title    string          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Category string          `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Children []*ApisTreeData `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ApisTreeData) Reset() {
	*x = ApisTreeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisTreeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisTreeData) ProtoMessage() {}

func (x *ApisTreeData) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisTreeData.ProtoReflect.Descriptor instead.
func (*ApisTreeData) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{76}
}

func (x *ApisTreeData) GetApiId() int64 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *ApisTreeData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ApisTreeData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ApisTreeData) GetChildren() []*ApisTreeData {
	if x != nil {
		return x.Children
	}
	return nil
}

type ApisTreeListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ApisTreeData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ApisTreeListRes) Reset() {
	*x = ApisTreeListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisTreeListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisTreeListRes) ProtoMessage() {}

func (x *ApisTreeListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisTreeListRes.ProtoReflect.Descriptor instead.
func (*ApisTreeListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{77}
}

func (x *ApisTreeListRes) GetList() []*ApisTreeData {
	if x != nil {
		return x.List
	}
	return nil
}

type ApisAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handle     string `protobuf:"bytes,1,opt,name=handle,proto3" json:"handle,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Path       string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Method     string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Category   string `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	CreateBy   int64  `protobuf:"varint,6,opt,name=createBy,proto3" json:"createBy,omitempty"`
	Permission string `protobuf:"bytes,7,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *ApisAddReq) Reset() {
	*x = ApisAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisAddReq) ProtoMessage() {}

func (x *ApisAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisAddReq.ProtoReflect.Descriptor instead.
func (*ApisAddReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{78}
}

func (x *ApisAddReq) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *ApisAddReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ApisAddReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApisAddReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApisAddReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ApisAddReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ApisAddReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type ApisUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiId      int64  `protobuf:"varint,1,opt,name=apiId,proto3" json:"apiId,omitempty"`
	Handle     string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Title      string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Path       string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Method     string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
	Category   string `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	UpdateBy   int64  `protobuf:"varint,7,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Permission string `protobuf:"bytes,8,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *ApisUpdateReq) Reset() {
	*x = ApisUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisUpdateReq) ProtoMessage() {}

func (x *ApisUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisUpdateReq.ProtoReflect.Descriptor instead.
func (*ApisUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{79}
}

func (x *ApisUpdateReq) GetApiId() int64 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

func (x *ApisUpdateReq) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *ApisUpdateReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ApisUpdateReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApisUpdateReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApisUpdateReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ApisUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ApisUpdateReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type ApisDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiIds []int64 `protobuf:"varint,1,rep,packed,name=apiIds,proto3" json:"apiIds,omitempty"`
}

func (x *ApisDeleteReq) Reset() {
	*x = ApisDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisDeleteReq) ProtoMessage() {}

func (x *ApisDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisDeleteReq.ProtoReflect.Descriptor instead.
func (*ApisDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{80}
}

func (x *ApisDeleteReq) GetApiIds() []int64 {
	if x != nil {
		return x.ApiIds
	}
	return nil
}

type DeptDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId int64 `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
}

func (x *DeptDetailReq) Reset() {
	*x = DeptDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptDetailReq) ProtoMessage() {}

func (x *DeptDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptDetailReq.ProtoReflect.Descriptor instead.
func (*DeptDetailReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{81}
}

func (x *DeptDetailReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

type DeptDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId    int64            `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
	ParentId  int64            `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Ancestors string           `protobuf:"bytes,3,opt,name=ancestors,proto3" json:"ancestors,omitempty"`
	DeptName  string           `protobuf:"bytes,4,opt,name=deptName,proto3" json:"deptName,omitempty"`
	Sort      int64            `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Leader    string           `protobuf:"bytes,6,opt,name=leader,proto3" json:"leader,omitempty"`
	Phone     string           `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string           `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Status    int64            `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy  int64            `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy  int64            `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	CreatedAt string           `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string           `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Children  []*DeptDetailRes `protobuf:"bytes,14,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *DeptDetailRes) Reset() {
	*x = DeptDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptDetailRes) ProtoMessage() {}

func (x *DeptDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptDetailRes.ProtoReflect.Descriptor instead.
func (*DeptDetailRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{82}
}

func (x *DeptDetailRes) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *DeptDetailRes) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptDetailRes) GetAncestors() string {
	if x != nil {
		return x.Ancestors
	}
	return ""
}

func (x *DeptDetailRes) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptDetailRes) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptDetailRes) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptDetailRes) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptDetailRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptDetailRes) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeptDetailRes) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DeptDetailRes) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *DeptDetailRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DeptDetailRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *DeptDetailRes) GetChildren() []*DeptDetailRes {
	if x != nil {
		return x.Children
	}
	return nil
}

type DeptListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName string `protobuf:"bytes,1,opt,name=deptName,proto3" json:"deptName,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeptListReq) Reset() {
	*x = DeptListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListReq) ProtoMessage() {}

func (x *DeptListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListReq.ProtoReflect.Descriptor instead.
func (*DeptListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{83}
}

func (x *DeptListReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptListReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeptListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DeptDetailRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *DeptListRes) Reset() {
	*x = DeptListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListRes) ProtoMessage() {}

func (x *DeptListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListRes.ProtoReflect.Descriptor instead.
func (*DeptListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{84}
}

func (x *DeptListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeptListRes) GetList() []*DeptDetailRes {
	if x != nil {
		return x.List
	}
	return nil
}

type DeptCreateUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId    int64  `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
	ParentId  int64  `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Ancestors string `protobuf:"bytes,3,opt,name=ancestors,proto3" json:"ancestors,omitempty"`
	DeptName  string `protobuf:"bytes,4,opt,name=deptName,proto3" json:"deptName,omitempty"`
	Sort      int64  `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Leader    string `protobuf:"bytes,6,opt,name=leader,proto3" json:"leader,omitempty"`
	Phone     string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Status    int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy  int64  `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy  int64  `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *DeptCreateUpdateReq) Reset() {
	*x = DeptCreateUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptCreateUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptCreateUpdateReq) ProtoMessage() {}

func (x *DeptCreateUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptCreateUpdateReq.ProtoReflect.Descriptor instead.
func (*DeptCreateUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{85}
}

func (x *DeptCreateUpdateReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *DeptCreateUpdateReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptCreateUpdateReq) GetAncestors() string {
	if x != nil {
		return x.Ancestors
	}
	return ""
}

func (x *DeptCreateUpdateReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptCreateUpdateReq) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptCreateUpdateReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptCreateUpdateReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptCreateUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptCreateUpdateReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeptCreateUpdateReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DeptCreateUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type DeptDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptIds []int64 `protobuf:"varint,1,rep,packed,name=deptIds,proto3" json:"deptIds,omitempty"`
}

func (x *DeptDeleteReq) Reset() {
	*x = DeptDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptDeleteReq) ProtoMessage() {}

func (x *DeptDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptDeleteReq.ProtoReflect.Descriptor instead.
func (*DeptDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{86}
}

func (x *DeptDeleteReq) GetDeptIds() []int64 {
	if x != nil {
		return x.DeptIds
	}
	return nil
}

//岗位
type PostDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (x *PostDetailReq) Reset() {
	*x = PostDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDetailReq) ProtoMessage() {}

func (x *PostDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDetailReq.ProtoReflect.Descriptor instead.
func (*PostDetailReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{87}
}

func (x *PostDetailReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type PostDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    int64  `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`
	PostCode  string `protobuf:"bytes,2,opt,name=postCode,proto3" json:"postCode,omitempty"`
	PostName  string `protobuf:"bytes,3,opt,name=postName,proto3" json:"postName,omitempty"`
	PostSort  int64  `protobuf:"varint,4,opt,name=postSort,proto3" json:"postSort,omitempty"`
	Status    int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Remark    string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateBy  int64  `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy  int64  `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	CreatedAt string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *PostDetailRes) Reset() {
	*x = PostDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDetailRes) ProtoMessage() {}

func (x *PostDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDetailRes.ProtoReflect.Descriptor instead.
func (*PostDetailRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{88}
}

func (x *PostDetailRes) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *PostDetailRes) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *PostDetailRes) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *PostDetailRes) GetPostSort() int64 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *PostDetailRes) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostDetailRes) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PostDetailRes) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PostDetailRes) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *PostDetailRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PostDetailRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PostListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCode string          `protobuf:"bytes,1,opt,name=postCode,proto3" json:"postCode,omitempty"`
	PostName string          `protobuf:"bytes,2,opt,name=postName,proto3" json:"postName,omitempty"`
	Status   int64           `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	PageInfo *common.PageReq `protobuf:"bytes,4,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *PostListReq) Reset() {
	*x = PostListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostListReq) ProtoMessage() {}

func (x *PostListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostListReq.ProtoReflect.Descriptor instead.
func (*PostListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{89}
}

func (x *PostListReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *PostListReq) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *PostListReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostListReq) GetPageInfo() *common.PageReq {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type PostListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*PostDetailRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PostListRes) Reset() {
	*x = PostListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostListRes) ProtoMessage() {}

func (x *PostListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostListRes.ProtoReflect.Descriptor instead.
func (*PostListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{90}
}

func (x *PostListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PostListRes) GetList() []*PostDetailRes {
	if x != nil {
		return x.List
	}
	return nil
}

type PostCreateUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId   int64  `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`
	PostCode string `protobuf:"bytes,2,opt,name=postCode,proto3" json:"postCode,omitempty"`
	PostName string `protobuf:"bytes,3,opt,name=postName,proto3" json:"postName,omitempty"`
	PostSort int64  `protobuf:"varint,4,opt,name=postSort,proto3" json:"postSort,omitempty"`
	Status   int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Remark   string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateBy int64  `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy int64  `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
}

func (x *PostCreateUpdateReq) Reset() {
	*x = PostCreateUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCreateUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCreateUpdateReq) ProtoMessage() {}

func (x *PostCreateUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCreateUpdateReq.ProtoReflect.Descriptor instead.
func (*PostCreateUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{91}
}

func (x *PostCreateUpdateReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *PostCreateUpdateReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *PostCreateUpdateReq) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *PostCreateUpdateReq) GetPostSort() int64 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *PostCreateUpdateReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PostCreateUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PostCreateUpdateReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PostCreateUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

type PostDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostIds []int64 `protobuf:"varint,1,rep,packed,name=postIds,proto3" json:"postIds,omitempty"`
}

func (x *PostDeleteReq) Reset() {
	*x = PostDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDeleteReq) ProtoMessage() {}

func (x *PostDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDeleteReq.ProtoReflect.Descriptor instead.
func (*PostDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{92}
}

func (x *PostDeleteReq) GetPostIds() []int64 {
	if x != nil {
		return x.PostIds
	}
	return nil
}

type ConfigDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId int64 `protobuf:"varint,1,opt,name=configId,proto3" json:"configId,omitempty"`
}

func (x *ConfigDetailReq) Reset() {
	*x = ConfigDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDetailReq) ProtoMessage() {}

func (x *ConfigDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDetailReq.ProtoReflect.Descriptor instead.
func (*ConfigDetailReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{93}
}

func (x *ConfigDetailReq) GetConfigId() int64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

type ConfigDetailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId    int64  `protobuf:"varint,1,opt,name=configId,proto3" json:"configId,omitempty"`
	ConfigName  string `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	ConfigKey   string `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	ConfigValue string `protobuf:"bytes,4,opt,name=configValue,proto3" json:"configValue,omitempty"`
	ConfigType  int64  `protobuf:"varint,5,opt,name=configType,proto3" json:"configType,omitempty"`
	IsFrontend  int64  `protobuf:"varint,6,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	CreateBy    int64  `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy    int64  `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	CreatedAt   string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   string `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Remark      string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ConfigDetailRes) Reset() {
	*x = ConfigDetailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDetailRes) ProtoMessage() {}

func (x *ConfigDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDetailRes.ProtoReflect.Descriptor instead.
func (*ConfigDetailRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{94}
}

func (x *ConfigDetailRes) GetConfigId() int64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *ConfigDetailRes) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ConfigDetailRes) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *ConfigDetailRes) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *ConfigDetailRes) GetConfigType() int64 {
	if x != nil {
		return x.ConfigType
	}
	return 0
}

func (x *ConfigDetailRes) GetIsFrontend() int64 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *ConfigDetailRes) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ConfigDetailRes) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ConfigDetailRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ConfigDetailRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ConfigDetailRes) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ConfigInfoByKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigKey string `protobuf:"bytes,1,opt,name=configKey,proto3" json:"configKey,omitempty"`
}

func (x *ConfigInfoByKeyReq) Reset() {
	*x = ConfigInfoByKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigInfoByKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigInfoByKeyReq) ProtoMessage() {}

func (x *ConfigInfoByKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigInfoByKeyReq.ProtoReflect.Descriptor instead.
func (*ConfigInfoByKeyReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{95}
}

func (x *ConfigInfoByKeyReq) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

type ConfigInfoByKeyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId    int64  `protobuf:"varint,1,opt,name=configId,proto3" json:"configId,omitempty"`
	ConfigKey   string `protobuf:"bytes,2,opt,name=configKey,proto3" json:"configKey,omitempty"`
	ConfigValue string `protobuf:"bytes,3,opt,name=configValue,proto3" json:"configValue,omitempty"`
}

func (x *ConfigInfoByKeyRes) Reset() {
	*x = ConfigInfoByKeyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigInfoByKeyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigInfoByKeyRes) ProtoMessage() {}

func (x *ConfigInfoByKeyRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigInfoByKeyRes.ProtoReflect.Descriptor instead.
func (*ConfigInfoByKeyRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{96}
}

func (x *ConfigInfoByKeyRes) GetConfigId() int64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *ConfigInfoByKeyRes) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *ConfigInfoByKeyRes) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

type ConfigListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigName string          `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	ConfigKey  string          `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	ConfigType string          `protobuf:"bytes,1,opt,name=configType,proto3" json:"configType,omitempty"`
	PageInfo   *common.PageReq `protobuf:"bytes,4,opt,name=pageInfo,proto3" json:"pageInfo,omitempty"`
}

func (x *ConfigListReq) Reset() {
	*x = ConfigListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListReq) ProtoMessage() {}

func (x *ConfigListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListReq.ProtoReflect.Descriptor instead.
func (*ConfigListReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{97}
}

func (x *ConfigListReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ConfigListReq) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *ConfigListReq) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *ConfigListReq) GetPageInfo() *common.PageReq {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type ConfigListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ConfigDetailRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ConfigListRes) Reset() {
	*x = ConfigListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListRes) ProtoMessage() {}

func (x *ConfigListRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListRes.ProtoReflect.Descriptor instead.
func (*ConfigListRes) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{98}
}

func (x *ConfigListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ConfigListRes) GetList() []*ConfigDetailRes {
	if x != nil {
		return x.List
	}
	return nil
}

type ConfigCreateUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigId    int64  `protobuf:"varint,1,opt,name=configId,proto3" json:"configId,omitempty"`
	ConfigName  string `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	ConfigKey   string `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	ConfigValue string `protobuf:"bytes,4,opt,name=configValue,proto3" json:"configValue,omitempty"`
	ConfigType  int64  `protobuf:"varint,5,opt,name=configType,proto3" json:"configType,omitempty"`
	IsFrontend  int64  `protobuf:"varint,6,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	CreateBy    int64  `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateBy    int64  `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	Remark      string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ConfigCreateUpdateReq) Reset() {
	*x = ConfigCreateUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigCreateUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigCreateUpdateReq) ProtoMessage() {}

func (x *ConfigCreateUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigCreateUpdateReq.ProtoReflect.Descriptor instead.
func (*ConfigCreateUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{99}
}

func (x *ConfigCreateUpdateReq) GetConfigId() int64 {
	if x != nil {
		return x.ConfigId
	}
	return 0
}

func (x *ConfigCreateUpdateReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ConfigCreateUpdateReq) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *ConfigCreateUpdateReq) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *ConfigCreateUpdateReq) GetConfigType() int64 {
	if x != nil {
		return x.ConfigType
	}
	return 0
}

func (x *ConfigCreateUpdateReq) GetIsFrontend() int64 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *ConfigCreateUpdateReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ConfigCreateUpdateReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ConfigCreateUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ConfigDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigIds []int64 `protobuf:"varint,1,rep,packed,name=configIds,proto3" json:"configIds,omitempty"`
}

func (x *ConfigDeleteReq) Reset() {
	*x = ConfigDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDeleteReq) ProtoMessage() {}

func (x *ConfigDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDeleteReq.ProtoReflect.Descriptor instead.
func (*ConfigDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{100}
}

func (x *ConfigDeleteReq) GetConfigIds() []int64 {
	if x != nil {
		return x.ConfigIds
	}
	return nil
}

type UserListDataUserDept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId   int64  `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
	DeptName string `protobuf:"bytes,2,opt,name=deptName,proto3" json:"deptName,omitempty"`
}

func (x *UserListDataUserDept) Reset() {
	*x = UserListDataUserDept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListDataUserDept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListDataUserDept) ProtoMessage() {}

func (x *UserListDataUserDept) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListDataUserDept.ProtoReflect.Descriptor instead.
func (*UserListDataUserDept) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UserListDataUserDept) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserListDataUserDept) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

type UserListDataUserRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64  `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RoleKey string `protobuf:"bytes,3,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
}

func (x *UserListDataUserRoles) Reset() {
	*x = UserListDataUserRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListDataUserRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListDataUserRoles) ProtoMessage() {}

func (x *UserListDataUserRoles) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListDataUserRoles.ProtoReflect.Descriptor instead.
func (*UserListDataUserRoles) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{13, 1}
}

func (x *UserListDataUserRoles) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UserListDataUserRoles) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserListDataUserRoles) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

type UserListDataUserPosts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId   int64  `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`
	PostCode string `protobuf:"bytes,2,opt,name=postCode,proto3" json:"postCode,omitempty"`
	PostName string `protobuf:"bytes,3,opt,name=postName,proto3" json:"postName,omitempty"`
}

func (x *UserListDataUserPosts) Reset() {
	*x = UserListDataUserPosts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListDataUserPosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListDataUserPosts) ProtoMessage() {}

func (x *UserListDataUserPosts) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListDataUserPosts.ProtoReflect.Descriptor instead.
func (*UserListDataUserPosts) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{13, 2}
}

func (x *UserListDataUserPosts) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *UserListDataUserPosts) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *UserListDataUserPosts) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

type UserPostRoleListResPostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId   int64  `protobuf:"varint,1,opt,name=postId,proto3" json:"postId,omitempty"`
	PostCode string `protobuf:"bytes,2,opt,name=postCode,proto3" json:"postCode,omitempty"`
	PostName string `protobuf:"bytes,3,opt,name=postName,proto3" json:"postName,omitempty"`
	PostSort int64  `protobuf:"varint,4,opt,name=postSort,proto3" json:"postSort,omitempty"`
	Status   int64  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserPostRoleListResPostInfo) Reset() {
	*x = UserPostRoleListResPostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostRoleListResPostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostRoleListResPostInfo) ProtoMessage() {}

func (x *UserPostRoleListResPostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostRoleListResPostInfo.ProtoReflect.Descriptor instead.
func (*UserPostRoleListResPostInfo) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{21, 0}
}

func (x *UserPostRoleListResPostInfo) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *UserPostRoleListResPostInfo) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *UserPostRoleListResPostInfo) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *UserPostRoleListResPostInfo) GetPostSort() int64 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *UserPostRoleListResPostInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UserPostRoleListResRoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64  `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Pid     int64  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Status  int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Sort    int64  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	RoleKey string `protobuf:"bytes,5,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	Name    string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserPostRoleListResRoleInfo) Reset() {
	*x = UserPostRoleListResRoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostRoleListResRoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostRoleListResRoleInfo) ProtoMessage() {}

func (x *UserPostRoleListResRoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostRoleListResRoleInfo.ProtoReflect.Descriptor instead.
func (*UserPostRoleListResRoleInfo) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{21, 1}
}

func (x *UserPostRoleListResRoleInfo) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UserPostRoleListResRoleInfo) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *UserPostRoleListResRoleInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserPostRoleListResRoleInfo) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UserPostRoleListResRoleInfo) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *UserPostRoleListResRoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserPostRoleListResDeptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId   int64  `protobuf:"varint,1,opt,name=deptId,proto3" json:"deptId,omitempty"`
	ParentId int64  `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	DeptName string `protobuf:"bytes,3,opt,name=deptName,proto3" json:"deptName,omitempty"`
}

func (x *UserPostRoleListResDeptInfo) Reset() {
	*x = UserPostRoleListResDeptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sys_v1_sys_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPostRoleListResDeptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPostRoleListResDeptInfo) ProtoMessage() {}

func (x *UserPostRoleListResDeptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_sys_v1_sys_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPostRoleListResDeptInfo.ProtoReflect.Descriptor instead.
func (*UserPostRoleListResDeptInfo) Descriptor() ([]byte, []int) {
	return file_api_sys_v1_sys_proto_rawDescGZIP(), []int{21, 2}
}

func (x *UserPostRoleListResDeptInfo) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *UserPostRoleListResDeptInfo) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UserPostRoleListResDeptInfo) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

var File_api_sys_v1_sys_proto protoreflect.FileDescriptor

var file_api_sys_v1_sys_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x0d, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x22, 0x42, 0x0a, 0x0d, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x6d, 0x67, 0x52, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x36, 0x34, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x62, 0x36, 0x34, 0x73, 0x22, 0x55, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x0b, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x4c, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6f, 0x62, 0x6a, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5c, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x84, 0x03, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x73, 0x22, 0xf5, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x89, 0x07, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70,
	0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x74, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x38, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x05,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x1a, 0x3e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x51, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0x5b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb3, 0x03, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x29,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x52, 0x65, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x22, 0x6a, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6c, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3f, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74,
	0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xe5, 0x04, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x8e,
	0x01, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x8e, 0x01, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x1a, 0x5a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xae, 0x01, 0x0a,
	0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x45,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6e, 0x75, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6e, 0x75, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x5d, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73,
	0x22, 0x2e, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x97, 0x02, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x69, 0x73, 0x42, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x63, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x5b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x0b,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9d, 0x05, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68,
	0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75,
	0x6d, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63,
	0x72, 0x75, 0x6d, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x51, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0f, 0x4d, 0x65,
	0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf5, 0x03, 0x0a, 0x0a,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x22, 0x90, 0x04, 0x0a, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x53, 0x68, 0x6f,
	0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d,
	0x62, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x22, 0x29, 0x0a, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x73, 0x22, 0x25, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x0e, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9e, 0x03, 0x0a, 0x10, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x59, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xc7, 0x02, 0x0a, 0x11, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x31, 0x0a, 0x11, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x37, 0x0a,
	0x19, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x44,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x19, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x95, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x88, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x59, 0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x29,
	0x0a, 0x0f, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x11, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2d, 0x0a, 0x11,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x8f, 0x02, 0x0a, 0x0b,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a,
	0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0xb2, 0x01,
	0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x0f, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x6f,
	0x72, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6c, 0x6f,
	0x72, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6f, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x56, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x4f, 0x70, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xf8, 0x03, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2a,
	0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe1, 0x03, 0x0a, 0x0f, 0x4f,
	0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x35, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x53, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x69, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x41, 0x70, 0x69, 0x49, 0x64, 0x22, 0xad, 0x02, 0x0a,
	0x0b, 0x41, 0x70, 0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x69,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a,
	0x0b, 0x41, 0x70, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x50, 0x0a, 0x0b, 0x41, 0x70, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x73, 0x54, 0x72, 0x65, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x73,
	0x54, 0x72, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x22, 0x3f, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x73, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x69, 0x73, 0x54, 0x72, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x73, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x69, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x27,
	0x0a, 0x0d, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x22, 0x98, 0x03, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x41, 0x0a, 0x0b, 0x44,
	0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52,
	0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xab, 0x02, 0x0a, 0x13, 0x44, 0x65, 0x70, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x22, 0x29, 0x0a, 0x0d, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x73, 0x22, 0x27, 0x0a, 0x0d, 0x50,
	0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x9f, 0x02, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x52, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x22, 0x29, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x2d,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xd9, 0x02,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x32, 0x0a, 0x12, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x70, 0x0a,
	0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x9a, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a, 0x0d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2f, 0x0a, 0x0f, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x73, 0x32, 0xc7, 0x28, 0x0a, 0x0a,
	0x53, 0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x6d, 0x67, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x6d, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x49, 0x6d, 0x67, 0x52, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x0e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x52, 0x65, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x3c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x12, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0f,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64,
	0x64, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x12, 0x3c, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x4a,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x70, 0x69, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a,
	0x08, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x4d,
	0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x12, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x4d,
	0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x4d,
	0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x4c, 0x0a, 0x14, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x40, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x12, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x12, 0x48, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x16, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x44, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x16, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0c, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x46, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x4a, 0x0a, 0x14, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x53,
	0x61, 0x76, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x12, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a,
	0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x45, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x53, 0x61, 0x76, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x41, 0x70, 0x69, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x69, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x41, 0x70, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x73, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x69, 0x73, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x07, 0x41, 0x70, 0x69, 0x73, 0x41, 0x64, 0x64, 0x12, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x41, 0x70, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x70, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x38,
	0x0a, 0x0a, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08,
	0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x44, 0x65,
	0x70, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x48,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x42, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x42, 0x25, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x15, 0x64, 0x72, 0x70, 0x73, 0x68, 0x6f, 0x70, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_sys_v1_sys_proto_rawDescOnce sync.Once
	file_api_sys_v1_sys_proto_rawDescData = file_api_sys_v1_sys_proto_rawDesc
)

func file_api_sys_v1_sys_proto_rawDescGZIP() []byte {
	file_api_sys_v1_sys_proto_rawDescOnce.Do(func() {
		file_api_sys_v1_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sys_v1_sys_proto_rawDescData)
	})
	return file_api_sys_v1_sys_proto_rawDescData
}

var file_api_sys_v1_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 107)
var file_api_sys_v1_sys_proto_goTypes = []interface{}{
	(*CaptchaImgReq)(nil),               // 0: api.sys.v1.CaptchaImgReq
	(*CaptchaImgRes)(nil),               // 1: api.sys.v1.CaptchaImgRes
	(*CaptchaReq)(nil),                  // 2: api.sys.v1.CaptchaReq
	(*CommonRes)(nil),                   // 3: api.sys.v1.CommonRes
	(*CommonReq)(nil),                   // 4: api.sys.v1.CommonReq
	(*CheckCasbinReq)(nil),              // 5: api.sys.v1.CheckCasbinReq
	(*LoginReq)(nil),                    // 6: api.sys.v1.LoginReq
	(*LoginRes)(nil),                    // 7: api.sys.v1.LoginRes
	(*UserInfoReq)(nil),                 // 8: api.sys.v1.UserInfoReq
	(*UserProfileSetReq)(nil),           // 9: api.sys.v1.UserProfileSetReq
	(*UserInfoRes)(nil),                 // 10: api.sys.v1.UserInfoRes
	(*UserAddReq)(nil),                  // 11: api.sys.v1.UserAddReq
	(*UserListReq)(nil),                 // 12: api.sys.v1.UserListReq
	(*UserListData)(nil),                // 13: api.sys.v1.UserListData
	(*UserListRes)(nil),                 // 14: api.sys.v1.UserListRes
	(*UserUpdateReq)(nil),               // 15: api.sys.v1.UserUpdateReq
	(*UserDeleteReq)(nil),               // 16: api.sys.v1.UserDeleteReq
	(*ReSetPasswordReq)(nil),            // 17: api.sys.v1.ReSetPasswordReq
	(*ChangePwdReq)(nil),                // 18: api.sys.v1.ChangePwdReq
	(*UserStatusReq)(nil),               // 19: api.sys.v1.UserStatusReq
	(*LoginUserUpdateReq)(nil),          // 20: api.sys.v1.LoginUserUpdateReq
	(*UserPostRoleListRes)(nil),         // 21: api.sys.v1.UserPostRoleListRes
	(*RoleAddReq)(nil),                  // 22: api.sys.v1.RoleAddReq
	(*RoleListReq)(nil),                 // 23: api.sys.v1.RoleListReq
	(*RoleListData)(nil),                // 24: api.sys.v1.RoleListData
	(*RoleListRes)(nil),                 // 25: api.sys.v1.RoleListRes
	(*RoleUpdateReq)(nil),               // 26: api.sys.v1.RoleUpdateReq
	(*RoleDeleteReq)(nil),               // 27: api.sys.v1.RoleDeleteReq
	(*UpdateRoleStatusReq)(nil),         // 28: api.sys.v1.UpdateRoleStatusReq
	(*QueryMenuByRoleIdReq)(nil),        // 29: api.sys.v1.QueryMenuByRoleIdReq
	(*QueryMenuByRoleIdRes)(nil),        // 30: api.sys.v1.QueryMenuByRoleIdRes
	(*UpdateMenuRoleReq)(nil),           // 31: api.sys.v1.UpdateMenuRoleReq
	(*QueryApisByRoleIdReq)(nil),        // 32: api.sys.v1.QueryApisByRoleIdReq
	(*QueryApisByRoleIdData)(nil),       // 33: api.sys.v1.QueryApisByRoleIdData
	(*QueryApisByRoleIdRes)(nil),        // 34: api.sys.v1.QueryApisByRoleIdRes
	(*UpdateApisRoleReq)(nil),           // 35: api.sys.v1.UpdateApisRoleReq
	(*MenuListReq)(nil),                 // 36: api.sys.v1.MenuListReq
	(*MenuListData)(nil),                // 37: api.sys.v1.MenuListData
	(*MenuListRes)(nil),                 // 38: api.sys.v1.MenuListRes
	(*MenuTreeListRes)(nil),             // 39: api.sys.v1.MenuTreeListRes
	(*MenuAddReq)(nil),                  // 40: api.sys.v1.MenuAddReq
	(*MenuUpdateReq)(nil),               // 41: api.sys.v1.MenuUpdateReq
	(*MenuDeleteReq)(nil),               // 42: api.sys.v1.MenuDeleteReq
	(*MenuUserReq)(nil),                 // 43: api.sys.v1.MenuUserReq
	(*DictDataAddReq)(nil),              // 44: api.sys.v1.DictDataAddReq
	(*DictDataListReq)(nil),             // 45: api.sys.v1.DictDataListReq
	(*DictDataListData)(nil),            // 46: api.sys.v1.DictDataListData
	(*DictDataListRes)(nil),             // 47: api.sys.v1.DictDataListRes
	(*DictDataUpdateReq)(nil),           // 48: api.sys.v1.DictDataUpdateReq
	(*DictDataDeleteReq)(nil),           // 49: api.sys.v1.DictDataDeleteReq
	(*DictDataInfoByDictCodeReq)(nil),   // 50: api.sys.v1.DictDataInfoByDictCodeReq
	(*DictDataListByDictTypeReq)(nil),   // 51: api.sys.v1.DictDataListByDictTypeReq
	(*DictTypeAddReq)(nil),              // 52: api.sys.v1.DictTypeAddReq
	(*DictTypeListReq)(nil),             // 53: api.sys.v1.DictTypeListReq
	(*DictTypeListData)(nil),            // 54: api.sys.v1.DictTypeListData
	(*DictTypeListRes)(nil),             // 55: api.sys.v1.DictTypeListRes
	(*DictTypeInfoReq)(nil),             // 56: api.sys.v1.DictTypeInfoReq
	(*DictTypeUpdateReq)(nil),           // 57: api.sys.v1.DictTypeUpdateReq
	(*DictTypeDeleteReq)(nil),           // 58: api.sys.v1.DictTypeDeleteReq
	(*LoginLogReq)(nil),                 // 59: api.sys.v1.LoginLogReq
	(*LoginlogListReq)(nil),             // 60: api.sys.v1.LoginlogListReq
	(*LoginlogListData)(nil),            // 61: api.sys.v1.LoginlogListData
	(*LoginlogListRes)(nil),             // 62: api.sys.v1.LoginlogListRes
	(*LoginlogDeleteReq)(nil),           // 63: api.sys.v1.LoginlogDeleteReq
	(*UserOnlineReq)(nil),               // 64: api.sys.v1.UserOnlineReq
	(*OperLogListReq)(nil),              // 65: api.sys.v1.OperLogListReq
	(*OperLogListRes)(nil),              // 66: api.sys.v1.OperLogListRes
	(*OperLogInfoReq)(nil),              // 67: api.sys.v1.OperLogInfoReq
	(*OperLogInfoRes)(nil),              // 68: api.sys.v1.OperLogInfoRes
	(*OperLogDeleteReq)(nil),            // 69: api.sys.v1.OperLogDeleteReq
	(*OperLogSaveData)(nil),             // 70: api.sys.v1.OperLogSaveData
	(*OperLogSaveReq)(nil),              // 71: api.sys.v1.OperLogSaveReq
	(*ApisInfoReq)(nil),                 // 72: api.sys.v1.ApisInfoReq
	(*ApisInfoRes)(nil),                 // 73: api.sys.v1.ApisInfoRes
	(*ApisListReq)(nil),                 // 74: api.sys.v1.ApisListReq
	(*ApisListRes)(nil),                 // 75: api.sys.v1.ApisListRes
	(*ApisTreeData)(nil),                // 76: api.sys.v1.ApisTreeData
	(*ApisTreeListRes)(nil),             // 77: api.sys.v1.ApisTreeListRes
	(*ApisAddReq)(nil),                  // 78: api.sys.v1.ApisAddReq
	(*ApisUpdateReq)(nil),               // 79: api.sys.v1.ApisUpdateReq
	(*ApisDeleteReq)(nil),               // 80: api.sys.v1.ApisDeleteReq
	(*DeptDetailReq)(nil),               // 81: api.sys.v1.DeptDetailReq
	(*DeptDetailRes)(nil),               // 82: api.sys.v1.DeptDetailRes
	(*DeptListReq)(nil),                 // 83: api.sys.v1.DeptListReq
	(*DeptListRes)(nil),                 // 84: api.sys.v1.DeptListRes
	(*DeptCreateUpdateReq)(nil),         // 85: api.sys.v1.DeptCreateUpdateReq
	(*DeptDeleteReq)(nil),               // 86: api.sys.v1.DeptDeleteReq
	(*PostDetailReq)(nil),               // 87: api.sys.v1.PostDetailReq
	(*PostDetailRes)(nil),               // 88: api.sys.v1.PostDetailRes
	(*PostListReq)(nil),                 // 89: api.sys.v1.PostListReq
	(*PostListRes)(nil),                 // 90: api.sys.v1.PostListRes
	(*PostCreateUpdateReq)(nil),         // 91: api.sys.v1.PostCreateUpdateReq
	(*PostDeleteReq)(nil),               // 92: api.sys.v1.PostDeleteReq
	(*ConfigDetailReq)(nil),             // 93: api.sys.v1.ConfigDetailReq
	(*ConfigDetailRes)(nil),             // 94: api.sys.v1.ConfigDetailRes
	(*ConfigInfoByKeyReq)(nil),          // 95: api.sys.v1.ConfigInfoByKeyReq
	(*ConfigInfoByKeyRes)(nil),          // 96: api.sys.v1.ConfigInfoByKeyRes
	(*ConfigListReq)(nil),               // 97: api.sys.v1.ConfigListReq
	(*ConfigListRes)(nil),               // 98: api.sys.v1.ConfigListRes
	(*ConfigCreateUpdateReq)(nil),       // 99: api.sys.v1.ConfigCreateUpdateReq
	(*ConfigDeleteReq)(nil),             // 100: api.sys.v1.ConfigDeleteReq
	(*UserListDataUserDept)(nil),        // 101: api.sys.v1.UserListData.userDept
	(*UserListDataUserRoles)(nil),       // 102: api.sys.v1.UserListData.userRoles
	(*UserListDataUserPosts)(nil),       // 103: api.sys.v1.UserListData.userPosts
	(*UserPostRoleListResPostInfo)(nil), // 104: api.sys.v1.UserPostRoleListRes.postInfo
	(*UserPostRoleListResRoleInfo)(nil), // 105: api.sys.v1.UserPostRoleListRes.roleInfo
	(*UserPostRoleListResDeptInfo)(nil), // 106: api.sys.v1.UserPostRoleListRes.deptInfo
	(*common.PageReq)(nil),              // 107: common.PageReq
	(*common.NullReq)(nil),              // 108: common.NullReq
	(*common.NullRes)(nil),              // 109: common.NullRes
}
var file_api_sys_v1_sys_proto_depIdxs = []int32{
	101, // 0: api.sys.v1.UserListData.deptInfo:type_name -> api.sys.v1.UserListData.userDept
	102, // 1: api.sys.v1.UserListData.roles:type_name -> api.sys.v1.UserListData.userRoles
	103, // 2: api.sys.v1.UserListData.posts:type_name -> api.sys.v1.UserListData.userPosts
	13,  // 3: api.sys.v1.UserListRes.list:type_name -> api.sys.v1.UserListData
	104, // 4: api.sys.v1.UserPostRoleListRes.postList:type_name -> api.sys.v1.UserPostRoleListRes.postInfo
	105, // 5: api.sys.v1.UserPostRoleListRes.roleList:type_name -> api.sys.v1.UserPostRoleListRes.roleInfo
	106, // 6: api.sys.v1.UserPostRoleListRes.deptList:type_name -> api.sys.v1.UserPostRoleListRes.deptInfo
	24,  // 7: api.sys.v1.RoleListRes.list:type_name -> api.sys.v1.RoleListData
	37,  // 8: api.sys.v1.QueryMenuByRoleIdRes.list:type_name -> api.sys.v1.MenuListData
	33,  // 9: api.sys.v1.QueryApisByRoleIdRes.list:type_name -> api.sys.v1.QueryApisByRoleIdData
	37,  // 10: api.sys.v1.MenuListData.children:type_name -> api.sys.v1.MenuListData
	37,  // 11: api.sys.v1.MenuListRes.list:type_name -> api.sys.v1.MenuListData
	37,  // 12: api.sys.v1.MenuTreeListRes.list:type_name -> api.sys.v1.MenuListData
	107, // 13: api.sys.v1.DictDataListReq.pageInfo:type_name -> common.PageReq
	46,  // 14: api.sys.v1.DictDataListRes.list:type_name -> api.sys.v1.DictDataListData
	107, // 15: api.sys.v1.DictTypeListReq.pageInfo:type_name -> common.PageReq
	54,  // 16: api.sys.v1.DictTypeListRes.list:type_name -> api.sys.v1.DictTypeListData
	107, // 17: api.sys.v1.LoginlogListReq.pageInfo:type_name -> common.PageReq
	61,  // 18: api.sys.v1.LoginlogListRes.list:type_name -> api.sys.v1.LoginlogListData
	107, // 19: api.sys.v1.OperLogListReq.pageInfo:type_name -> common.PageReq
	68,  // 20: api.sys.v1.OperLogListRes.list:type_name -> api.sys.v1.OperLogInfoRes
	70,  // 21: api.sys.v1.OperLogSaveReq.logList:type_name -> api.sys.v1.OperLogSaveData
	107, // 22: api.sys.v1.ApisListReq.pageInfo:type_name -> common.PageReq
	73,  // 23: api.sys.v1.ApisListRes.list:type_name -> api.sys.v1.ApisInfoRes
	76,  // 24: api.sys.v1.ApisTreeData.children:type_name -> api.sys.v1.ApisTreeData
	76,  // 25: api.sys.v1.ApisTreeListRes.list:type_name -> api.sys.v1.ApisTreeData
	82,  // 26: api.sys.v1.DeptDetailRes.children:type_name -> api.sys.v1.DeptDetailRes
	82,  // 27: api.sys.v1.DeptListRes.list:type_name -> api.sys.v1.DeptDetailRes
	107, // 28: api.sys.v1.PostListReq.pageInfo:type_name -> common.PageReq
	88,  // 29: api.sys.v1.PostListRes.list:type_name -> api.sys.v1.PostDetailRes
	107, // 30: api.sys.v1.ConfigListReq.pageInfo:type_name -> common.PageReq
	94,  // 31: api.sys.v1.ConfigListRes.list:type_name -> api.sys.v1.ConfigDetailRes
	0,   // 32: api.sys.v1.SysService.CaptchaImg:input_type -> api.sys.v1.CaptchaImgReq
	2,   // 33: api.sys.v1.SysService.Captcha:input_type -> api.sys.v1.CaptchaReq
	6,   // 34: api.sys.v1.SysService.Login:input_type -> api.sys.v1.LoginReq
	5,   // 35: api.sys.v1.SysService.CheckCasbin:input_type -> api.sys.v1.CheckCasbinReq
	8,   // 36: api.sys.v1.SysService.UserProfile:input_type -> api.sys.v1.UserInfoReq
	9,   // 37: api.sys.v1.SysService.UserProfileSet:input_type -> api.sys.v1.UserProfileSetReq
	8,   // 38: api.sys.v1.SysService.UserInfo:input_type -> api.sys.v1.UserInfoReq
	11,  // 39: api.sys.v1.SysService.UserAdd:input_type -> api.sys.v1.UserAddReq
	12,  // 40: api.sys.v1.SysService.UserList:input_type -> api.sys.v1.UserListReq
	15,  // 41: api.sys.v1.SysService.UserUpdate:input_type -> api.sys.v1.UserUpdateReq
	16,  // 42: api.sys.v1.SysService.UserDelete:input_type -> api.sys.v1.UserDeleteReq
	17,  // 43: api.sys.v1.SysService.ReSetPassword:input_type -> api.sys.v1.ReSetPasswordReq
	18,  // 44: api.sys.v1.SysService.ChangePwd:input_type -> api.sys.v1.ChangePwdReq
	19,  // 45: api.sys.v1.SysService.UpdateUserStatus:input_type -> api.sys.v1.UserStatusReq
	108, // 46: api.sys.v1.SysService.GetUserPostRoleList:input_type -> common.NullReq
	20,  // 47: api.sys.v1.SysService.LoginUserUpdate:input_type -> api.sys.v1.LoginUserUpdateReq
	22,  // 48: api.sys.v1.SysService.RoleAdd:input_type -> api.sys.v1.RoleAddReq
	23,  // 49: api.sys.v1.SysService.RoleList:input_type -> api.sys.v1.RoleListReq
	26,  // 50: api.sys.v1.SysService.RoleUpdate:input_type -> api.sys.v1.RoleUpdateReq
	27,  // 51: api.sys.v1.SysService.RoleDelete:input_type -> api.sys.v1.RoleDeleteReq
	28,  // 52: api.sys.v1.SysService.UpdateRoleStatus:input_type -> api.sys.v1.UpdateRoleStatusReq
	29,  // 53: api.sys.v1.SysService.GetMenusByRoleId:input_type -> api.sys.v1.QueryMenuByRoleIdReq
	31,  // 54: api.sys.v1.SysService.UpdateMenuRole:input_type -> api.sys.v1.UpdateMenuRoleReq
	32,  // 55: api.sys.v1.SysService.GetApisByRoleId:input_type -> api.sys.v1.QueryApisByRoleIdReq
	35,  // 56: api.sys.v1.SysService.UpdateRoleApisById:input_type -> api.sys.v1.UpdateApisRoleReq
	36,  // 57: api.sys.v1.SysService.MenuList:input_type -> api.sys.v1.MenuListReq
	36,  // 58: api.sys.v1.SysService.MenuTreeList:input_type -> api.sys.v1.MenuListReq
	40,  // 59: api.sys.v1.SysService.MenuAdd:input_type -> api.sys.v1.MenuAddReq
	41,  // 60: api.sys.v1.SysService.MenuUpdate:input_type -> api.sys.v1.MenuUpdateReq
	42,  // 61: api.sys.v1.SysService.MenuDelete:input_type -> api.sys.v1.MenuDeleteReq
	43,  // 62: api.sys.v1.SysService.MenuListByUserId:input_type -> api.sys.v1.MenuUserReq
	43,  // 63: api.sys.v1.SysService.MenuTreeListByUserId:input_type -> api.sys.v1.MenuUserReq
	44,  // 64: api.sys.v1.SysService.DictDataAdd:input_type -> api.sys.v1.DictDataAddReq
	45,  // 65: api.sys.v1.SysService.DictDataList:input_type -> api.sys.v1.DictDataListReq
	48,  // 66: api.sys.v1.SysService.DictDataUpdate:input_type -> api.sys.v1.DictDataUpdateReq
	49,  // 67: api.sys.v1.SysService.DictDataDelete:input_type -> api.sys.v1.DictDataDeleteReq
	50,  // 68: api.sys.v1.SysService.DictDataInfoByDictCode:input_type -> api.sys.v1.DictDataInfoByDictCodeReq
	51,  // 69: api.sys.v1.SysService.DictDataListByDictType:input_type -> api.sys.v1.DictDataListByDictTypeReq
	52,  // 70: api.sys.v1.SysService.DictTypeAdd:input_type -> api.sys.v1.DictTypeAddReq
	53,  // 71: api.sys.v1.SysService.DictTypeList:input_type -> api.sys.v1.DictTypeListReq
	56,  // 72: api.sys.v1.SysService.DictTypeInfo:input_type -> api.sys.v1.DictTypeInfoReq
	57,  // 73: api.sys.v1.SysService.DictTypeUpdate:input_type -> api.sys.v1.DictTypeUpdateReq
	58,  // 74: api.sys.v1.SysService.DictTypeDelete:input_type -> api.sys.v1.DictTypeDeleteReq
	4,   // 75: api.sys.v1.SysService.DictTypeOptionSelect:input_type -> api.sys.v1.CommonReq
	59,  // 76: api.sys.v1.SysService.SaveLoginlog:input_type -> api.sys.v1.LoginLogReq
	60,  // 77: api.sys.v1.SysService.LoginlogList:input_type -> api.sys.v1.LoginlogListReq
	63,  // 78: api.sys.v1.SysService.LoginlogDelete:input_type -> api.sys.v1.LoginlogDeleteReq
	108, // 79: api.sys.v1.SysService.LoginlogClear:input_type -> common.NullReq
	64,  // 80: api.sys.v1.SysService.SaveUserOnline:input_type -> api.sys.v1.UserOnlineReq
	65,  // 81: api.sys.v1.SysService.OperLogList:input_type -> api.sys.v1.OperLogListReq
	67,  // 82: api.sys.v1.SysService.OperLogInfo:input_type -> api.sys.v1.OperLogInfoReq
	69,  // 83: api.sys.v1.SysService.OperLogDelete:input_type -> api.sys.v1.OperLogDeleteReq
	108, // 84: api.sys.v1.SysService.OperLogClear:input_type -> common.NullReq
	71,  // 85: api.sys.v1.SysService.OperLogSave:input_type -> api.sys.v1.OperLogSaveReq
	72,  // 86: api.sys.v1.SysService.ApisInfo:input_type -> api.sys.v1.ApisInfoReq
	74,  // 87: api.sys.v1.SysService.ApisList:input_type -> api.sys.v1.ApisListReq
	108, // 88: api.sys.v1.SysService.ApisTreeList:input_type -> common.NullReq
	78,  // 89: api.sys.v1.SysService.ApisAdd:input_type -> api.sys.v1.ApisAddReq
	79,  // 90: api.sys.v1.SysService.ApisUpdate:input_type -> api.sys.v1.ApisUpdateReq
	80,  // 91: api.sys.v1.SysService.ApisDelete:input_type -> api.sys.v1.ApisDeleteReq
	81,  // 92: api.sys.v1.SysService.DeptDetail:input_type -> api.sys.v1.DeptDetailReq
	83,  // 93: api.sys.v1.SysService.DeptList:input_type -> api.sys.v1.DeptListReq
	83,  // 94: api.sys.v1.SysService.DeptTree:input_type -> api.sys.v1.DeptListReq
	85,  // 95: api.sys.v1.SysService.DeptCreate:input_type -> api.sys.v1.DeptCreateUpdateReq
	85,  // 96: api.sys.v1.SysService.DeptUpdate:input_type -> api.sys.v1.DeptCreateUpdateReq
	86,  // 97: api.sys.v1.SysService.DeptDelete:input_type -> api.sys.v1.DeptDeleteReq
	87,  // 98: api.sys.v1.SysService.PostDetail:input_type -> api.sys.v1.PostDetailReq
	89,  // 99: api.sys.v1.SysService.PostList:input_type -> api.sys.v1.PostListReq
	91,  // 100: api.sys.v1.SysService.PostCreate:input_type -> api.sys.v1.PostCreateUpdateReq
	91,  // 101: api.sys.v1.SysService.PostUpdate:input_type -> api.sys.v1.PostCreateUpdateReq
	92,  // 102: api.sys.v1.SysService.PostDelete:input_type -> api.sys.v1.PostDeleteReq
	93,  // 103: api.sys.v1.SysService.ConfigDetail:input_type -> api.sys.v1.ConfigDetailReq
	95,  // 104: api.sys.v1.SysService.ConfigInfoByKey:input_type -> api.sys.v1.ConfigInfoByKeyReq
	97,  // 105: api.sys.v1.SysService.ConfigList:input_type -> api.sys.v1.ConfigListReq
	99,  // 106: api.sys.v1.SysService.ConfigCreate:input_type -> api.sys.v1.ConfigCreateUpdateReq
	99,  // 107: api.sys.v1.SysService.ConfigUpdate:input_type -> api.sys.v1.ConfigCreateUpdateReq
	100, // 108: api.sys.v1.SysService.ConfigDelete:input_type -> api.sys.v1.ConfigDeleteReq
	1,   // 109: api.sys.v1.SysService.CaptchaImg:output_type -> api.sys.v1.CaptchaImgRes
	109, // 110: api.sys.v1.SysService.Captcha:output_type -> common.NullRes
	7,   // 111: api.sys.v1.SysService.Login:output_type -> api.sys.v1.LoginRes
	3,   // 112: api.sys.v1.SysService.CheckCasbin:output_type -> api.sys.v1.CommonRes
	13,  // 113: api.sys.v1.SysService.UserProfile:output_type -> api.sys.v1.UserListData
	3,   // 114: api.sys.v1.SysService.UserProfileSet:output_type -> api.sys.v1.CommonRes
	10,  // 115: api.sys.v1.SysService.UserInfo:output_type -> api.sys.v1.UserInfoRes
	3,   // 116: api.sys.v1.SysService.UserAdd:output_type -> api.sys.v1.CommonRes
	14,  // 117: api.sys.v1.SysService.UserList:output_type -> api.sys.v1.UserListRes
	3,   // 118: api.sys.v1.SysService.UserUpdate:output_type -> api.sys.v1.CommonRes
	3,   // 119: api.sys.v1.SysService.UserDelete:output_type -> api.sys.v1.CommonRes
	3,   // 120: api.sys.v1.SysService.ReSetPassword:output_type -> api.sys.v1.CommonRes
	3,   // 121: api.sys.v1.SysService.ChangePwd:output_type -> api.sys.v1.CommonRes
	3,   // 122: api.sys.v1.SysService.UpdateUserStatus:output_type -> api.sys.v1.CommonRes
	21,  // 123: api.sys.v1.SysService.GetUserPostRoleList:output_type -> api.sys.v1.UserPostRoleListRes
	3,   // 124: api.sys.v1.SysService.LoginUserUpdate:output_type -> api.sys.v1.CommonRes
	3,   // 125: api.sys.v1.SysService.RoleAdd:output_type -> api.sys.v1.CommonRes
	25,  // 126: api.sys.v1.SysService.RoleList:output_type -> api.sys.v1.RoleListRes
	3,   // 127: api.sys.v1.SysService.RoleUpdate:output_type -> api.sys.v1.CommonRes
	3,   // 128: api.sys.v1.SysService.RoleDelete:output_type -> api.sys.v1.CommonRes
	3,   // 129: api.sys.v1.SysService.UpdateRoleStatus:output_type -> api.sys.v1.CommonRes
	30,  // 130: api.sys.v1.SysService.GetMenusByRoleId:output_type -> api.sys.v1.QueryMenuByRoleIdRes
	3,   // 131: api.sys.v1.SysService.UpdateMenuRole:output_type -> api.sys.v1.CommonRes
	34,  // 132: api.sys.v1.SysService.GetApisByRoleId:output_type -> api.sys.v1.QueryApisByRoleIdRes
	3,   // 133: api.sys.v1.SysService.UpdateRoleApisById:output_type -> api.sys.v1.CommonRes
	38,  // 134: api.sys.v1.SysService.MenuList:output_type -> api.sys.v1.MenuListRes
	39,  // 135: api.sys.v1.SysService.MenuTreeList:output_type -> api.sys.v1.MenuTreeListRes
	3,   // 136: api.sys.v1.SysService.MenuAdd:output_type -> api.sys.v1.CommonRes
	3,   // 137: api.sys.v1.SysService.MenuUpdate:output_type -> api.sys.v1.CommonRes
	3,   // 138: api.sys.v1.SysService.MenuDelete:output_type -> api.sys.v1.CommonRes
	38,  // 139: api.sys.v1.SysService.MenuListByUserId:output_type -> api.sys.v1.MenuListRes
	39,  // 140: api.sys.v1.SysService.MenuTreeListByUserId:output_type -> api.sys.v1.MenuTreeListRes
	3,   // 141: api.sys.v1.SysService.DictDataAdd:output_type -> api.sys.v1.CommonRes
	47,  // 142: api.sys.v1.SysService.DictDataList:output_type -> api.sys.v1.DictDataListRes
	3,   // 143: api.sys.v1.SysService.DictDataUpdate:output_type -> api.sys.v1.CommonRes
	3,   // 144: api.sys.v1.SysService.DictDataDelete:output_type -> api.sys.v1.CommonRes
	46,  // 145: api.sys.v1.SysService.DictDataInfoByDictCode:output_type -> api.sys.v1.DictDataListData
	47,  // 146: api.sys.v1.SysService.DictDataListByDictType:output_type -> api.sys.v1.DictDataListRes
	3,   // 147: api.sys.v1.SysService.DictTypeAdd:output_type -> api.sys.v1.CommonRes
	55,  // 148: api.sys.v1.SysService.DictTypeList:output_type -> api.sys.v1.DictTypeListRes
	54,  // 149: api.sys.v1.SysService.DictTypeInfo:output_type -> api.sys.v1.DictTypeListData
	3,   // 150: api.sys.v1.SysService.DictTypeUpdate:output_type -> api.sys.v1.CommonRes
	3,   // 151: api.sys.v1.SysService.DictTypeDelete:output_type -> api.sys.v1.CommonRes
	55,  // 152: api.sys.v1.SysService.DictTypeOptionSelect:output_type -> api.sys.v1.DictTypeListRes
	3,   // 153: api.sys.v1.SysService.SaveLoginlog:output_type -> api.sys.v1.CommonRes
	62,  // 154: api.sys.v1.SysService.LoginlogList:output_type -> api.sys.v1.LoginlogListRes
	3,   // 155: api.sys.v1.SysService.LoginlogDelete:output_type -> api.sys.v1.CommonRes
	3,   // 156: api.sys.v1.SysService.LoginlogClear:output_type -> api.sys.v1.CommonRes
	3,   // 157: api.sys.v1.SysService.SaveUserOnline:output_type -> api.sys.v1.CommonRes
	66,  // 158: api.sys.v1.SysService.OperLogList:output_type -> api.sys.v1.OperLogListRes
	68,  // 159: api.sys.v1.SysService.OperLogInfo:output_type -> api.sys.v1.OperLogInfoRes
	109, // 160: api.sys.v1.SysService.OperLogDelete:output_type -> common.NullRes
	109, // 161: api.sys.v1.SysService.OperLogClear:output_type -> common.NullRes
	109, // 162: api.sys.v1.SysService.OperLogSave:output_type -> common.NullRes
	73,  // 163: api.sys.v1.SysService.ApisInfo:output_type -> api.sys.v1.ApisInfoRes
	75,  // 164: api.sys.v1.SysService.ApisList:output_type -> api.sys.v1.ApisListRes
	77,  // 165: api.sys.v1.SysService.ApisTreeList:output_type -> api.sys.v1.ApisTreeListRes
	109, // 166: api.sys.v1.SysService.ApisAdd:output_type -> common.NullRes
	109, // 167: api.sys.v1.SysService.ApisUpdate:output_type -> common.NullRes
	109, // 168: api.sys.v1.SysService.ApisDelete:output_type -> common.NullRes
	82,  // 169: api.sys.v1.SysService.DeptDetail:output_type -> api.sys.v1.DeptDetailRes
	84,  // 170: api.sys.v1.SysService.DeptList:output_type -> api.sys.v1.DeptListRes
	84,  // 171: api.sys.v1.SysService.DeptTree:output_type -> api.sys.v1.DeptListRes
	109, // 172: api.sys.v1.SysService.DeptCreate:output_type -> common.NullRes
	109, // 173: api.sys.v1.SysService.DeptUpdate:output_type -> common.NullRes
	109, // 174: api.sys.v1.SysService.DeptDelete:output_type -> common.NullRes
	88,  // 175: api.sys.v1.SysService.PostDetail:output_type -> api.sys.v1.PostDetailRes
	90,  // 176: api.sys.v1.SysService.PostList:output_type -> api.sys.v1.PostListRes
	109, // 177: api.sys.v1.SysService.PostCreate:output_type -> common.NullRes
	109, // 178: api.sys.v1.SysService.PostUpdate:output_type -> common.NullRes
	109, // 179: api.sys.v1.SysService.PostDelete:output_type -> common.NullRes
	94,  // 180: api.sys.v1.SysService.ConfigDetail:output_type -> api.sys.v1.ConfigDetailRes
	96,  // 181: api.sys.v1.SysService.ConfigInfoByKey:output_type -> api.sys.v1.ConfigInfoByKeyRes
	98,  // 182: api.sys.v1.SysService.ConfigList:output_type -> api.sys.v1.ConfigListRes
	109, // 183: api.sys.v1.SysService.ConfigCreate:output_type -> common.NullRes
	109, // 184: api.sys.v1.SysService.ConfigUpdate:output_type -> common.NullRes
	109, // 185: api.sys.v1.SysService.ConfigDelete:output_type -> common.NullRes
	109, // [109:186] is the sub-list for method output_type
	32,  // [32:109] is the sub-list for method input_type
	32,  // [32:32] is the sub-list for extension type_name
	32,  // [32:32] is the sub-list for extension extendee
	0,   // [0:32] is the sub-list for field type_name
}

func init() { file_api_sys_v1_sys_proto_init() }
func file_api_sys_v1_sys_proto_init() {
	if File_api_sys_v1_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_sys_v1_sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaImgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaImgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckCasbinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReSetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostRoleListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMenuByRoleIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMenuByRoleIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryApisByRoleIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryApisByRoleIdData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryApisByRoleIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApisRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuTreeListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataInfoByDictCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataListByDictTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginlogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginlogListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginlogListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginlogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogSaveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisTreeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisTreeListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptCreateUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostCreateUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDetailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigInfoByKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigInfoByKeyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigCreateUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListDataUserDept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListDataUserRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListDataUserPosts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostRoleListResPostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostRoleListResRoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sys_v1_sys_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPostRoleListResDeptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sys_v1_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   107,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sys_v1_sys_proto_goTypes,
		DependencyIndexes: file_api_sys_v1_sys_proto_depIdxs,
		MessageInfos:      file_api_sys_v1_sys_proto_msgTypes,
	}.Build()
	File_api_sys_v1_sys_proto = out.File
	file_api_sys_v1_sys_proto_rawDesc = nil
	file_api_sys_v1_sys_proto_goTypes = nil
	file_api_sys_v1_sys_proto_depIdxs = nil
}
